"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@internationalized+string@3.2.4";
exports.ids = ["vendor-chunks/@internationalized+string@3.2.4"];
exports.modules = {

/***/ "(ssr)/../node_modules/.pnpm/@internationalized+string@3.2.4/node_modules/@internationalized/string/dist/LocalizedStringDictionary.mjs":
/*!***************************************************************************************************************************************!*\
  !*** ../node_modules/.pnpm/@internationalized+string@3.2.4/node_modules/@internationalized/string/dist/LocalizedStringDictionary.mjs ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalizedStringDictionary: () => (/* binding */ $5b160d28a433310d$export$c17fa47878dc55b6)\n/* harmony export */ });\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ const $5b160d28a433310d$var$localeSymbol = Symbol.for(\"react-aria.i18n.locale\");\nconst $5b160d28a433310d$var$stringsSymbol = Symbol.for(\"react-aria.i18n.strings\");\nlet $5b160d28a433310d$var$cachedGlobalStrings = undefined;\nclass $5b160d28a433310d$export$c17fa47878dc55b6 {\n    /** Returns a localized string for the given key and locale. */ getStringForLocale(key, locale) {\n        let strings = this.getStringsForLocale(locale);\n        let string = strings[key];\n        if (!string) throw new Error(`Could not find intl message ${key} in ${locale} locale`);\n        return string;\n    }\n    /** Returns all localized strings for the given locale. */ getStringsForLocale(locale) {\n        let strings = this.strings[locale];\n        if (!strings) {\n            strings = $5b160d28a433310d$var$getStringsForLocale(locale, this.strings, this.defaultLocale);\n            this.strings[locale] = strings;\n        }\n        return strings;\n    }\n    static getGlobalDictionaryForPackage(packageName) {\n        if (true) return null;\n        let locale = window[$5b160d28a433310d$var$localeSymbol];\n        if ($5b160d28a433310d$var$cachedGlobalStrings === undefined) {\n            let globalStrings = window[$5b160d28a433310d$var$stringsSymbol];\n            if (!globalStrings) return null;\n            $5b160d28a433310d$var$cachedGlobalStrings = {};\n            for(let pkg in globalStrings)$5b160d28a433310d$var$cachedGlobalStrings[pkg] = new $5b160d28a433310d$export$c17fa47878dc55b6({\n                [locale]: globalStrings[pkg]\n            }, locale);\n        }\n        let dictionary = $5b160d28a433310d$var$cachedGlobalStrings === null || $5b160d28a433310d$var$cachedGlobalStrings === void 0 ? void 0 : $5b160d28a433310d$var$cachedGlobalStrings[packageName];\n        if (!dictionary) throw new Error(`Strings for package \"${packageName}\" were not included by LocalizedStringProvider. Please add it to the list passed to createLocalizedStringDictionary.`);\n        return dictionary;\n    }\n    constructor(messages, defaultLocale = \"en-US\"){\n        // Clone messages so we don't modify the original object.\n        // Filter out entries with falsy values which may have been caused by applying optimize-locales-plugin.\n        this.strings = Object.fromEntries(Object.entries(messages).filter(([, v])=>v));\n        this.defaultLocale = defaultLocale;\n    }\n}\nfunction $5b160d28a433310d$var$getStringsForLocale(locale, strings, defaultLocale = \"en-US\") {\n    // If there is an exact match, use it.\n    if (strings[locale]) return strings[locale];\n    // Attempt to find the closest match by language.\n    // For example, if the locale is fr-CA (French Canadian), but there is only\n    // an fr-FR (France) set of strings, use that.\n    // This could be replaced with Intl.LocaleMatcher once it is supported.\n    // https://github.com/tc39/proposal-intl-localematcher\n    let language = $5b160d28a433310d$var$getLanguage(locale);\n    if (strings[language]) return strings[language];\n    for(let key in strings){\n        if (key.startsWith(language + \"-\")) return strings[key];\n    }\n    // Nothing close, use english.\n    return strings[defaultLocale];\n}\nfunction $5b160d28a433310d$var$getLanguage(locale) {\n    // @ts-ignore\n    if (Intl.Locale) return new Intl.Locale(locale).language;\n    return locale.split(\"-\")[0];\n}\n //# sourceMappingURL=LocalizedStringDictionary.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/.pnpm/@internationalized+string@3.2.4/node_modules/@internationalized/string/dist/LocalizedStringDictionary.mjs\n");

/***/ }),

/***/ "(ssr)/../node_modules/.pnpm/@internationalized+string@3.2.4/node_modules/@internationalized/string/dist/LocalizedStringFormatter.mjs":
/*!**************************************************************************************************************************************!*\
  !*** ../node_modules/.pnpm/@internationalized+string@3.2.4/node_modules/@internationalized/string/dist/LocalizedStringFormatter.mjs ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalizedStringFormatter: () => (/* binding */ $6db58dc88e78b024$export$2f817fcdc4b89ae0)\n/* harmony export */ });\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ const $6db58dc88e78b024$var$pluralRulesCache = new Map();\nconst $6db58dc88e78b024$var$numberFormatCache = new Map();\nclass $6db58dc88e78b024$export$2f817fcdc4b89ae0 {\n    /** Formats a localized string for the given key with the provided variables. */ format(key, variables) {\n        let message = this.strings.getStringForLocale(key, this.locale);\n        return typeof message === \"function\" ? message(variables, this) : message;\n    }\n    plural(count, options, type = \"cardinal\") {\n        let opt = options[\"=\" + count];\n        if (opt) return typeof opt === \"function\" ? opt() : opt;\n        let key = this.locale + \":\" + type;\n        let pluralRules = $6db58dc88e78b024$var$pluralRulesCache.get(key);\n        if (!pluralRules) {\n            pluralRules = new Intl.PluralRules(this.locale, {\n                type: type\n            });\n            $6db58dc88e78b024$var$pluralRulesCache.set(key, pluralRules);\n        }\n        let selected = pluralRules.select(count);\n        opt = options[selected] || options.other;\n        return typeof opt === \"function\" ? opt() : opt;\n    }\n    number(value) {\n        let numberFormat = $6db58dc88e78b024$var$numberFormatCache.get(this.locale);\n        if (!numberFormat) {\n            numberFormat = new Intl.NumberFormat(this.locale);\n            $6db58dc88e78b024$var$numberFormatCache.set(this.locale, numberFormat);\n        }\n        return numberFormat.format(value);\n    }\n    select(options, value) {\n        let opt = options[value] || options.other;\n        return typeof opt === \"function\" ? opt() : opt;\n    }\n    constructor(locale, strings){\n        this.locale = locale;\n        this.strings = strings;\n    }\n}\n //# sourceMappingURL=LocalizedStringFormatter.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BpbnRlcm5hdGlvbmFsaXplZCtzdHJpbmdAMy4yLjQvbm9kZV9tb2R1bGVzL0BpbnRlcm5hdGlvbmFsaXplZC9zdHJpbmcvZGlzdC9Mb2NhbGl6ZWRTdHJpbmdGb3JtYXR0ZXIubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7Ozs7OztDQVVDLEdBQUcsTUFBTUEseUNBQXlDLElBQUlDO0FBQ3ZELE1BQU1DLDBDQUEwQyxJQUFJRDtBQUNwRCxNQUFNRTtJQUNGLDhFQUE4RSxHQUFHQyxPQUFPQyxHQUFHLEVBQUVDLFNBQVMsRUFBRTtRQUNwRyxJQUFJQyxVQUFVLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxrQkFBa0IsQ0FBQ0osS0FBSyxJQUFJLENBQUNLLE1BQU07UUFDOUQsT0FBTyxPQUFPSCxZQUFZLGFBQWFBLFFBQVFELFdBQVcsSUFBSSxJQUFJQztJQUN0RTtJQUNBSSxPQUFPQyxLQUFLLEVBQUVDLE9BQU8sRUFBRUMsT0FBTyxVQUFVLEVBQUU7UUFDdEMsSUFBSUMsTUFBTUYsT0FBTyxDQUFDLE1BQU1ELE1BQU07UUFDOUIsSUFBSUcsS0FBSyxPQUFPLE9BQU9BLFFBQVEsYUFBYUEsUUFBUUE7UUFDcEQsSUFBSVYsTUFBTSxJQUFJLENBQUNLLE1BQU0sR0FBRyxNQUFNSTtRQUM5QixJQUFJRSxjQUFjaEIsdUNBQXVDaUIsR0FBRyxDQUFDWjtRQUM3RCxJQUFJLENBQUNXLGFBQWE7WUFDZEEsY0FBYyxJQUFJRSxLQUFLQyxXQUFXLENBQUMsSUFBSSxDQUFDVCxNQUFNLEVBQUU7Z0JBQzVDSSxNQUFNQTtZQUNWO1lBQ0FkLHVDQUF1Q29CLEdBQUcsQ0FBQ2YsS0FBS1c7UUFDcEQ7UUFDQSxJQUFJSyxXQUFXTCxZQUFZTSxNQUFNLENBQUNWO1FBQ2xDRyxNQUFNRixPQUFPLENBQUNRLFNBQVMsSUFBSVIsUUFBUVUsS0FBSztRQUN4QyxPQUFPLE9BQU9SLFFBQVEsYUFBYUEsUUFBUUE7SUFDL0M7SUFDQVMsT0FBT0MsS0FBSyxFQUFFO1FBQ1YsSUFBSUMsZUFBZXhCLHdDQUF3Q2UsR0FBRyxDQUFDLElBQUksQ0FBQ1AsTUFBTTtRQUMxRSxJQUFJLENBQUNnQixjQUFjO1lBQ2ZBLGVBQWUsSUFBSVIsS0FBS1MsWUFBWSxDQUFDLElBQUksQ0FBQ2pCLE1BQU07WUFDaERSLHdDQUF3Q2tCLEdBQUcsQ0FBQyxJQUFJLENBQUNWLE1BQU0sRUFBRWdCO1FBQzdEO1FBQ0EsT0FBT0EsYUFBYXRCLE1BQU0sQ0FBQ3FCO0lBQy9CO0lBQ0FILE9BQU9ULE9BQU8sRUFBRVksS0FBSyxFQUFFO1FBQ25CLElBQUlWLE1BQU1GLE9BQU8sQ0FBQ1ksTUFBTSxJQUFJWixRQUFRVSxLQUFLO1FBQ3pDLE9BQU8sT0FBT1IsUUFBUSxhQUFhQSxRQUFRQTtJQUMvQztJQUNBYSxZQUFZbEIsTUFBTSxFQUFFRixPQUFPLENBQUM7UUFDeEIsSUFBSSxDQUFDRSxNQUFNLEdBQUdBO1FBQ2QsSUFBSSxDQUFDRixPQUFPLEdBQUdBO0lBQ25CO0FBQ0o7QUFHK0UsQ0FDL0UsMkRBQTJEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmFudC1lcy1kb2NzLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9AaW50ZXJuYXRpb25hbGl6ZWQrc3RyaW5nQDMuMi40L25vZGVfbW9kdWxlcy9AaW50ZXJuYXRpb25hbGl6ZWQvc3RyaW5nL2Rpc3QvTG9jYWxpemVkU3RyaW5nRm9ybWF0dGVyLm1qcz9hYzhiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgMjAyMiBBZG9iZS4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIFRoaXMgZmlsZSBpcyBsaWNlbnNlZCB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heSBvYnRhaW4gYSBjb3B5XG4gKiBvZiB0aGUgTGljZW5zZSBhdCBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyXG4gKiB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBSRVBSRVNFTlRBVElPTlNcbiAqIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZVxuICogZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqLyBjb25zdCAkNmRiNThkYzg4ZTc4YjAyNCR2YXIkcGx1cmFsUnVsZXNDYWNoZSA9IG5ldyBNYXAoKTtcbmNvbnN0ICQ2ZGI1OGRjODhlNzhiMDI0JHZhciRudW1iZXJGb3JtYXRDYWNoZSA9IG5ldyBNYXAoKTtcbmNsYXNzICQ2ZGI1OGRjODhlNzhiMDI0JGV4cG9ydCQyZjgxN2ZjZGM0Yjg5YWUwIHtcbiAgICAvKiogRm9ybWF0cyBhIGxvY2FsaXplZCBzdHJpbmcgZm9yIHRoZSBnaXZlbiBrZXkgd2l0aCB0aGUgcHJvdmlkZWQgdmFyaWFibGVzLiAqLyBmb3JtYXQoa2V5LCB2YXJpYWJsZXMpIHtcbiAgICAgICAgbGV0IG1lc3NhZ2UgPSB0aGlzLnN0cmluZ3MuZ2V0U3RyaW5nRm9yTG9jYWxlKGtleSwgdGhpcy5sb2NhbGUpO1xuICAgICAgICByZXR1cm4gdHlwZW9mIG1lc3NhZ2UgPT09ICdmdW5jdGlvbicgPyBtZXNzYWdlKHZhcmlhYmxlcywgdGhpcykgOiBtZXNzYWdlO1xuICAgIH1cbiAgICBwbHVyYWwoY291bnQsIG9wdGlvbnMsIHR5cGUgPSAnY2FyZGluYWwnKSB7XG4gICAgICAgIGxldCBvcHQgPSBvcHRpb25zWyc9JyArIGNvdW50XTtcbiAgICAgICAgaWYgKG9wdCkgcmV0dXJuIHR5cGVvZiBvcHQgPT09ICdmdW5jdGlvbicgPyBvcHQoKSA6IG9wdDtcbiAgICAgICAgbGV0IGtleSA9IHRoaXMubG9jYWxlICsgJzonICsgdHlwZTtcbiAgICAgICAgbGV0IHBsdXJhbFJ1bGVzID0gJDZkYjU4ZGM4OGU3OGIwMjQkdmFyJHBsdXJhbFJ1bGVzQ2FjaGUuZ2V0KGtleSk7XG4gICAgICAgIGlmICghcGx1cmFsUnVsZXMpIHtcbiAgICAgICAgICAgIHBsdXJhbFJ1bGVzID0gbmV3IEludGwuUGx1cmFsUnVsZXModGhpcy5sb2NhbGUsIHtcbiAgICAgICAgICAgICAgICB0eXBlOiB0eXBlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICQ2ZGI1OGRjODhlNzhiMDI0JHZhciRwbHVyYWxSdWxlc0NhY2hlLnNldChrZXksIHBsdXJhbFJ1bGVzKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgc2VsZWN0ZWQgPSBwbHVyYWxSdWxlcy5zZWxlY3QoY291bnQpO1xuICAgICAgICBvcHQgPSBvcHRpb25zW3NlbGVjdGVkXSB8fCBvcHRpb25zLm90aGVyO1xuICAgICAgICByZXR1cm4gdHlwZW9mIG9wdCA9PT0gJ2Z1bmN0aW9uJyA/IG9wdCgpIDogb3B0O1xuICAgIH1cbiAgICBudW1iZXIodmFsdWUpIHtcbiAgICAgICAgbGV0IG51bWJlckZvcm1hdCA9ICQ2ZGI1OGRjODhlNzhiMDI0JHZhciRudW1iZXJGb3JtYXRDYWNoZS5nZXQodGhpcy5sb2NhbGUpO1xuICAgICAgICBpZiAoIW51bWJlckZvcm1hdCkge1xuICAgICAgICAgICAgbnVtYmVyRm9ybWF0ID0gbmV3IEludGwuTnVtYmVyRm9ybWF0KHRoaXMubG9jYWxlKTtcbiAgICAgICAgICAgICQ2ZGI1OGRjODhlNzhiMDI0JHZhciRudW1iZXJGb3JtYXRDYWNoZS5zZXQodGhpcy5sb2NhbGUsIG51bWJlckZvcm1hdCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bWJlckZvcm1hdC5mb3JtYXQodmFsdWUpO1xuICAgIH1cbiAgICBzZWxlY3Qob3B0aW9ucywgdmFsdWUpIHtcbiAgICAgICAgbGV0IG9wdCA9IG9wdGlvbnNbdmFsdWVdIHx8IG9wdGlvbnMub3RoZXI7XG4gICAgICAgIHJldHVybiB0eXBlb2Ygb3B0ID09PSAnZnVuY3Rpb24nID8gb3B0KCkgOiBvcHQ7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKGxvY2FsZSwgc3RyaW5ncyl7XG4gICAgICAgIHRoaXMubG9jYWxlID0gbG9jYWxlO1xuICAgICAgICB0aGlzLnN0cmluZ3MgPSBzdHJpbmdzO1xuICAgIH1cbn1cblxuXG5leHBvcnQgeyQ2ZGI1OGRjODhlNzhiMDI0JGV4cG9ydCQyZjgxN2ZjZGM0Yjg5YWUwIGFzIExvY2FsaXplZFN0cmluZ0Zvcm1hdHRlcn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Mb2NhbGl6ZWRTdHJpbmdGb3JtYXR0ZXIubW9kdWxlLmpzLm1hcFxuIl0sIm5hbWVzIjpbIiQ2ZGI1OGRjODhlNzhiMDI0JHZhciRwbHVyYWxSdWxlc0NhY2hlIiwiTWFwIiwiJDZkYjU4ZGM4OGU3OGIwMjQkdmFyJG51bWJlckZvcm1hdENhY2hlIiwiJDZkYjU4ZGM4OGU3OGIwMjQkZXhwb3J0JDJmODE3ZmNkYzRiODlhZTAiLCJmb3JtYXQiLCJrZXkiLCJ2YXJpYWJsZXMiLCJtZXNzYWdlIiwic3RyaW5ncyIsImdldFN0cmluZ0ZvckxvY2FsZSIsImxvY2FsZSIsInBsdXJhbCIsImNvdW50Iiwib3B0aW9ucyIsInR5cGUiLCJvcHQiLCJwbHVyYWxSdWxlcyIsImdldCIsIkludGwiLCJQbHVyYWxSdWxlcyIsInNldCIsInNlbGVjdGVkIiwic2VsZWN0Iiwib3RoZXIiLCJudW1iZXIiLCJ2YWx1ZSIsIm51bWJlckZvcm1hdCIsIk51bWJlckZvcm1hdCIsImNvbnN0cnVjdG9yIiwiTG9jYWxpemVkU3RyaW5nRm9ybWF0dGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/.pnpm/@internationalized+string@3.2.4/node_modules/@internationalized/string/dist/LocalizedStringFormatter.mjs\n");

/***/ })

};
;