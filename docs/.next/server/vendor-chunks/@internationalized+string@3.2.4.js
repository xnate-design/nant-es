"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@internationalized+string@3.2.4";
exports.ids = ["vendor-chunks/@internationalized+string@3.2.4"];
exports.modules = {

/***/ "(ssr)/../node_modules/.pnpm/@internationalized+string@3.2.4/node_modules/@internationalized/string/dist/LocalizedStringDictionary.mjs":
/*!***************************************************************************************************************************************!*\
  !*** ../node_modules/.pnpm/@internationalized+string@3.2.4/node_modules/@internationalized/string/dist/LocalizedStringDictionary.mjs ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalizedStringDictionary: () => (/* binding */ $5b160d28a433310d$export$c17fa47878dc55b6)\n/* harmony export */ });\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ const $5b160d28a433310d$var$localeSymbol = Symbol.for(\"react-aria.i18n.locale\");\nconst $5b160d28a433310d$var$stringsSymbol = Symbol.for(\"react-aria.i18n.strings\");\nlet $5b160d28a433310d$var$cachedGlobalStrings = undefined;\nclass $5b160d28a433310d$export$c17fa47878dc55b6 {\n    /** Returns a localized string for the given key and locale. */ getStringForLocale(key, locale) {\n        let strings = this.getStringsForLocale(locale);\n        let string = strings[key];\n        if (!string) throw new Error(`Could not find intl message ${key} in ${locale} locale`);\n        return string;\n    }\n    /** Returns all localized strings for the given locale. */ getStringsForLocale(locale) {\n        let strings = this.strings[locale];\n        if (!strings) {\n            strings = $5b160d28a433310d$var$getStringsForLocale(locale, this.strings, this.defaultLocale);\n            this.strings[locale] = strings;\n        }\n        return strings;\n    }\n    static getGlobalDictionaryForPackage(packageName) {\n        if (true) return null;\n        let locale = window[$5b160d28a433310d$var$localeSymbol];\n        if ($5b160d28a433310d$var$cachedGlobalStrings === undefined) {\n            let globalStrings = window[$5b160d28a433310d$var$stringsSymbol];\n            if (!globalStrings) return null;\n            $5b160d28a433310d$var$cachedGlobalStrings = {};\n            for(let pkg in globalStrings)$5b160d28a433310d$var$cachedGlobalStrings[pkg] = new $5b160d28a433310d$export$c17fa47878dc55b6({\n                [locale]: globalStrings[pkg]\n            }, locale);\n        }\n        let dictionary = $5b160d28a433310d$var$cachedGlobalStrings === null || $5b160d28a433310d$var$cachedGlobalStrings === void 0 ? void 0 : $5b160d28a433310d$var$cachedGlobalStrings[packageName];\n        if (!dictionary) throw new Error(`Strings for package \"${packageName}\" were not included by LocalizedStringProvider. Please add it to the list passed to createLocalizedStringDictionary.`);\n        return dictionary;\n    }\n    constructor(messages, defaultLocale = \"en-US\"){\n        // Clone messages so we don't modify the original object.\n        // Filter out entries with falsy values which may have been caused by applying optimize-locales-plugin.\n        this.strings = Object.fromEntries(Object.entries(messages).filter(([, v])=>v));\n        this.defaultLocale = defaultLocale;\n    }\n}\nfunction $5b160d28a433310d$var$getStringsForLocale(locale, strings, defaultLocale = \"en-US\") {\n    // If there is an exact match, use it.\n    if (strings[locale]) return strings[locale];\n    // Attempt to find the closest match by language.\n    // For example, if the locale is fr-CA (French Canadian), but there is only\n    // an fr-FR (France) set of strings, use that.\n    // This could be replaced with Intl.LocaleMatcher once it is supported.\n    // https://github.com/tc39/proposal-intl-localematcher\n    let language = $5b160d28a433310d$var$getLanguage(locale);\n    if (strings[language]) return strings[language];\n    for(let key in strings){\n        if (key.startsWith(language + \"-\")) return strings[key];\n    }\n    // Nothing close, use english.\n    return strings[defaultLocale];\n}\nfunction $5b160d28a433310d$var$getLanguage(locale) {\n    // @ts-ignore\n    if (Intl.Locale) return new Intl.Locale(locale).language;\n    return locale.split(\"-\")[0];\n}\n //# sourceMappingURL=LocalizedStringDictionary.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/.pnpm/@internationalized+string@3.2.4/node_modules/@internationalized/string/dist/LocalizedStringDictionary.mjs\n");

/***/ }),

/***/ "(ssr)/../node_modules/.pnpm/@internationalized+string@3.2.4/node_modules/@internationalized/string/dist/LocalizedStringFormatter.mjs":
/*!**************************************************************************************************************************************!*\
  !*** ../node_modules/.pnpm/@internationalized+string@3.2.4/node_modules/@internationalized/string/dist/LocalizedStringFormatter.mjs ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalizedStringFormatter: () => (/* binding */ $6db58dc88e78b024$export$2f817fcdc4b89ae0)\n/* harmony export */ });\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ const $6db58dc88e78b024$var$pluralRulesCache = new Map();\nconst $6db58dc88e78b024$var$numberFormatCache = new Map();\nclass $6db58dc88e78b024$export$2f817fcdc4b89ae0 {\n    /** Formats a localized string for the given key with the provided variables. */ format(key, variables) {\n        let message = this.strings.getStringForLocale(key, this.locale);\n        return typeof message === \"function\" ? message(variables, this) : message;\n    }\n    plural(count, options, type = \"cardinal\") {\n        let opt = options[\"=\" + count];\n        if (opt) return typeof opt === \"function\" ? opt() : opt;\n        let key = this.locale + \":\" + type;\n        let pluralRules = $6db58dc88e78b024$var$pluralRulesCache.get(key);\n        if (!pluralRules) {\n            pluralRules = new Intl.PluralRules(this.locale, {\n                type: type\n            });\n            $6db58dc88e78b024$var$pluralRulesCache.set(key, pluralRules);\n        }\n        let selected = pluralRules.select(count);\n        opt = options[selected] || options.other;\n        return typeof opt === \"function\" ? opt() : opt;\n    }\n    number(value) {\n        let numberFormat = $6db58dc88e78b024$var$numberFormatCache.get(this.locale);\n        if (!numberFormat) {\n            numberFormat = new Intl.NumberFormat(this.locale);\n            $6db58dc88e78b024$var$numberFormatCache.set(this.locale, numberFormat);\n        }\n        return numberFormat.format(value);\n    }\n    select(options, value) {\n        let opt = options[value] || options.other;\n        return typeof opt === \"function\" ? opt() : opt;\n    }\n    constructor(locale, strings){\n        this.locale = locale;\n        this.strings = strings;\n    }\n}\n //# sourceMappingURL=LocalizedStringFormatter.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BpbnRlcm5hdGlvbmFsaXplZCtzdHJpbmdAMy4yLjQvbm9kZV9tb2R1bGVzL0BpbnRlcm5hdGlvbmFsaXplZC9zdHJpbmcvZGlzdC9Mb2NhbGl6ZWRTdHJpbmdGb3JtYXR0ZXIubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7Ozs7OztDQVVDLEdBQUcsTUFBTUEseUNBQXlDLElBQUlDO0FBQ3ZELE1BQU1DLDBDQUEwQyxJQUFJRDtBQUNwRCxNQUFNRTtJQUNGLDhFQUE4RSxHQUFHQyxPQUFPQyxHQUFHLEVBQUVDLFNBQVMsRUFBRTtRQUNwRyxJQUFJQyxVQUFVLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxrQkFBa0IsQ0FBQ0osS0FBSyxJQUFJLENBQUNLLE1BQU07UUFDOUQsT0FBTyxPQUFPSCxZQUFZLGFBQWFBLFFBQVFELFdBQVcsSUFBSSxJQUFJQztJQUN0RTtJQUNBSSxPQUFPQyxLQUFLLEVBQUVDLE9BQU8sRUFBRUMsT0FBTyxVQUFVLEVBQUU7UUFDdEMsSUFBSUMsTUFBTUYsT0FBTyxDQUFDLE1BQU1ELE1BQU07UUFDOUIsSUFBSUcsS0FBSyxPQUFPLE9BQU9BLFFBQVEsYUFBYUEsUUFBUUE7UUFDcEQsSUFBSVYsTUFBTSxJQUFJLENBQUNLLE1BQU0sR0FBRyxNQUFNSTtRQUM5QixJQUFJRSxjQUFjaEIsdUNBQXVDaUIsR0FBRyxDQUFDWjtRQUM3RCxJQUFJLENBQUNXLGFBQWE7WUFDZEEsY0FBYyxJQUFJRSxLQUFLQyxXQUFXLENBQUMsSUFBSSxDQUFDVCxNQUFNLEVBQUU7Z0JBQzVDSSxNQUFNQTtZQUNWO1lBQ0FkLHVDQUF1Q29CLEdBQUcsQ0FBQ2YsS0FBS1c7UUFDcEQ7UUFDQSxJQUFJSyxXQUFXTCxZQUFZTSxNQUFNLENBQUNWO1FBQ2xDRyxNQUFNRixPQUFPLENBQUNRLFNBQVMsSUFBSVIsUUFBUVUsS0FBSztRQUN4QyxPQUFPLE9BQU9SLFFBQVEsYUFBYUEsUUFBUUE7SUFDL0M7SUFDQVMsT0FBT0MsS0FBSyxFQUFFO1FBQ1YsSUFBSUMsZUFBZXhCLHdDQUF3Q2UsR0FBRyxDQUFDLElBQUksQ0FBQ1AsTUFBTTtRQUMxRSxJQUFJLENBQUNnQixjQUFjO1lBQ2ZBLGVBQWUsSUFBSVIsS0FBS1MsWUFBWSxDQUFDLElBQUksQ0FBQ2pCLE1BQU07WUFDaERSLHdDQUF3Q2tCLEdBQUcsQ0FBQyxJQUFJLENBQUNWLE1BQU0sRUFBRWdCO1FBQzdEO1FBQ0EsT0FBT0EsYUFBYXRCLE1BQU0sQ0FBQ3FCO0lBQy9CO0lBQ0FILE9BQU9ULE9BQU8sRUFBRVksS0FBSyxFQUFFO1FBQ25CLElBQUlWLE1BQU1GLE9BQU8sQ0FBQ1ksTUFBTSxJQUFJWixRQUFRVSxLQUFLO1FBQ3pDLE9BQU8sT0FBT1IsUUFBUSxhQUFhQSxRQUFRQTtJQUMvQztJQUNBYSxZQUFZbEIsTUFBTSxFQUFFRixPQUFPLENBQUM7UUFDeEIsSUFBSSxDQUFDRSxNQUFNLEdBQUdBO1FBQ2QsSUFBSSxDQUFDRixPQUFPLEdBQUdBO0lBQ25CO0FBQ0o7QUFHK0UsQ0FDL0UsMkRBQTJEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtZG9jcy8uLi9ub2RlX21vZHVsZXMvLnBucG0vQGludGVybmF0aW9uYWxpemVkK3N0cmluZ0AzLjIuNC9ub2RlX21vZHVsZXMvQGludGVybmF0aW9uYWxpemVkL3N0cmluZy9kaXN0L0xvY2FsaXplZFN0cmluZ0Zvcm1hdHRlci5tanM/YWM4YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMjIgQWRvYmUuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBUaGlzIGZpbGUgaXMgbGljZW5zZWQgdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXkgb2J0YWluIGEgY29weVxuICogb2YgdGhlIExpY2Vuc2UgYXQgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlclxuICogdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgUkVQUkVTRU5UQVRJT05TXG4gKiBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2VcbiAqIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi8gY29uc3QgJDZkYjU4ZGM4OGU3OGIwMjQkdmFyJHBsdXJhbFJ1bGVzQ2FjaGUgPSBuZXcgTWFwKCk7XG5jb25zdCAkNmRiNThkYzg4ZTc4YjAyNCR2YXIkbnVtYmVyRm9ybWF0Q2FjaGUgPSBuZXcgTWFwKCk7XG5jbGFzcyAkNmRiNThkYzg4ZTc4YjAyNCRleHBvcnQkMmY4MTdmY2RjNGI4OWFlMCB7XG4gICAgLyoqIEZvcm1hdHMgYSBsb2NhbGl6ZWQgc3RyaW5nIGZvciB0aGUgZ2l2ZW4ga2V5IHdpdGggdGhlIHByb3ZpZGVkIHZhcmlhYmxlcy4gKi8gZm9ybWF0KGtleSwgdmFyaWFibGVzKSB7XG4gICAgICAgIGxldCBtZXNzYWdlID0gdGhpcy5zdHJpbmdzLmdldFN0cmluZ0ZvckxvY2FsZShrZXksIHRoaXMubG9jYWxlKTtcbiAgICAgICAgcmV0dXJuIHR5cGVvZiBtZXNzYWdlID09PSAnZnVuY3Rpb24nID8gbWVzc2FnZSh2YXJpYWJsZXMsIHRoaXMpIDogbWVzc2FnZTtcbiAgICB9XG4gICAgcGx1cmFsKGNvdW50LCBvcHRpb25zLCB0eXBlID0gJ2NhcmRpbmFsJykge1xuICAgICAgICBsZXQgb3B0ID0gb3B0aW9uc1snPScgKyBjb3VudF07XG4gICAgICAgIGlmIChvcHQpIHJldHVybiB0eXBlb2Ygb3B0ID09PSAnZnVuY3Rpb24nID8gb3B0KCkgOiBvcHQ7XG4gICAgICAgIGxldCBrZXkgPSB0aGlzLmxvY2FsZSArICc6JyArIHR5cGU7XG4gICAgICAgIGxldCBwbHVyYWxSdWxlcyA9ICQ2ZGI1OGRjODhlNzhiMDI0JHZhciRwbHVyYWxSdWxlc0NhY2hlLmdldChrZXkpO1xuICAgICAgICBpZiAoIXBsdXJhbFJ1bGVzKSB7XG4gICAgICAgICAgICBwbHVyYWxSdWxlcyA9IG5ldyBJbnRsLlBsdXJhbFJ1bGVzKHRoaXMubG9jYWxlLCB7XG4gICAgICAgICAgICAgICAgdHlwZTogdHlwZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAkNmRiNThkYzg4ZTc4YjAyNCR2YXIkcGx1cmFsUnVsZXNDYWNoZS5zZXQoa2V5LCBwbHVyYWxSdWxlcyk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHNlbGVjdGVkID0gcGx1cmFsUnVsZXMuc2VsZWN0KGNvdW50KTtcbiAgICAgICAgb3B0ID0gb3B0aW9uc1tzZWxlY3RlZF0gfHwgb3B0aW9ucy5vdGhlcjtcbiAgICAgICAgcmV0dXJuIHR5cGVvZiBvcHQgPT09ICdmdW5jdGlvbicgPyBvcHQoKSA6IG9wdDtcbiAgICB9XG4gICAgbnVtYmVyKHZhbHVlKSB7XG4gICAgICAgIGxldCBudW1iZXJGb3JtYXQgPSAkNmRiNThkYzg4ZTc4YjAyNCR2YXIkbnVtYmVyRm9ybWF0Q2FjaGUuZ2V0KHRoaXMubG9jYWxlKTtcbiAgICAgICAgaWYgKCFudW1iZXJGb3JtYXQpIHtcbiAgICAgICAgICAgIG51bWJlckZvcm1hdCA9IG5ldyBJbnRsLk51bWJlckZvcm1hdCh0aGlzLmxvY2FsZSk7XG4gICAgICAgICAgICAkNmRiNThkYzg4ZTc4YjAyNCR2YXIkbnVtYmVyRm9ybWF0Q2FjaGUuc2V0KHRoaXMubG9jYWxlLCBudW1iZXJGb3JtYXQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudW1iZXJGb3JtYXQuZm9ybWF0KHZhbHVlKTtcbiAgICB9XG4gICAgc2VsZWN0KG9wdGlvbnMsIHZhbHVlKSB7XG4gICAgICAgIGxldCBvcHQgPSBvcHRpb25zW3ZhbHVlXSB8fCBvcHRpb25zLm90aGVyO1xuICAgICAgICByZXR1cm4gdHlwZW9mIG9wdCA9PT0gJ2Z1bmN0aW9uJyA/IG9wdCgpIDogb3B0O1xuICAgIH1cbiAgICBjb25zdHJ1Y3Rvcihsb2NhbGUsIHN0cmluZ3Mpe1xuICAgICAgICB0aGlzLmxvY2FsZSA9IGxvY2FsZTtcbiAgICAgICAgdGhpcy5zdHJpbmdzID0gc3RyaW5ncztcbiAgICB9XG59XG5cblxuZXhwb3J0IHskNmRiNThkYzg4ZTc4YjAyNCRleHBvcnQkMmY4MTdmY2RjNGI4OWFlMCBhcyBMb2NhbGl6ZWRTdHJpbmdGb3JtYXR0ZXJ9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TG9jYWxpemVkU3RyaW5nRm9ybWF0dGVyLm1vZHVsZS5qcy5tYXBcbiJdLCJuYW1lcyI6WyIkNmRiNThkYzg4ZTc4YjAyNCR2YXIkcGx1cmFsUnVsZXNDYWNoZSIsIk1hcCIsIiQ2ZGI1OGRjODhlNzhiMDI0JHZhciRudW1iZXJGb3JtYXRDYWNoZSIsIiQ2ZGI1OGRjODhlNzhiMDI0JGV4cG9ydCQyZjgxN2ZjZGM0Yjg5YWUwIiwiZm9ybWF0Iiwia2V5IiwidmFyaWFibGVzIiwibWVzc2FnZSIsInN0cmluZ3MiLCJnZXRTdHJpbmdGb3JMb2NhbGUiLCJsb2NhbGUiLCJwbHVyYWwiLCJjb3VudCIsIm9wdGlvbnMiLCJ0eXBlIiwib3B0IiwicGx1cmFsUnVsZXMiLCJnZXQiLCJJbnRsIiwiUGx1cmFsUnVsZXMiLCJzZXQiLCJzZWxlY3RlZCIsInNlbGVjdCIsIm90aGVyIiwibnVtYmVyIiwidmFsdWUiLCJudW1iZXJGb3JtYXQiLCJOdW1iZXJGb3JtYXQiLCJjb25zdHJ1Y3RvciIsIkxvY2FsaXplZFN0cmluZ0Zvcm1hdHRlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/.pnpm/@internationalized+string@3.2.4/node_modules/@internationalized/string/dist/LocalizedStringFormatter.mjs\n");

/***/ })

};
;