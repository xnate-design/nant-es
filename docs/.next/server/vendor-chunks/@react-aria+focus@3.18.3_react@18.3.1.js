"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@react-aria+focus@3.18.3_react@18.3.1";
exports.ids = ["vendor-chunks/@react-aria+focus@3.18.3_react@18.3.1"];
exports.modules = {

/***/ "(ssr)/../node_modules/.pnpm/@react-aria+focus@3.18.3_react@18.3.1/node_modules/@react-aria/focus/dist/FocusScope.mjs":
/*!**********************************************************************************************************************!*\
  !*** ../node_modules/.pnpm/@react-aria+focus@3.18.3_react@18.3.1/node_modules/@react-aria/focus/dist/FocusScope.mjs ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FocusScope: () => (/* binding */ $9bf71ea28793e738$export$20e40289641fbbb6),\n/* harmony export */   createFocusManager: () => (/* binding */ $9bf71ea28793e738$export$c5251b9e124bf29),\n/* harmony export */   focusScopeTree: () => (/* binding */ $9bf71ea28793e738$export$d06fae2ee68b101e),\n/* harmony export */   getFocusableTreeWalker: () => (/* binding */ $9bf71ea28793e738$export$2d6ec8fc375ceafa),\n/* harmony export */   isElementInChildOfActiveScope: () => (/* binding */ $9bf71ea28793e738$export$1258395f99bf9cbf),\n/* harmony export */   isFocusable: () => (/* binding */ $9bf71ea28793e738$export$4c063cf1350e6fed),\n/* harmony export */   useFocusManager: () => (/* binding */ $9bf71ea28793e738$export$10c5169755ce7bd7)\n/* harmony export */ });\n/* harmony import */ var _focusSafely_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./focusSafely.mjs */ \"(ssr)/../node_modules/.pnpm/@react-aria+focus@3.18.3_react@18.3.1/node_modules/@react-aria/focus/dist/focusSafely.mjs\");\n/* harmony import */ var _isElementVisible_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./isElementVisible.mjs */ \"(ssr)/../node_modules/.pnpm/@react-aria+focus@3.18.3_react@18.3.1/node_modules/@react-aria/focus/dist/isElementVisible.mjs\");\n/* harmony import */ var _react_aria_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @react-aria/utils */ \"(ssr)/../node_modules/.pnpm/@react-aria+utils@3.25.3_react@18.3.1/node_modules/@react-aria/utils/dist/useLayoutEffect.mjs\");\n/* harmony import */ var _react_aria_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-aria/utils */ \"(ssr)/../node_modules/.pnpm/@react-aria+utils@3.25.3_react@18.3.1/node_modules/@react-aria/utils/dist/domHelpers.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/../node_modules/.pnpm/next@14.0.3_@babel+core@7.25.7_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ const $9bf71ea28793e738$var$FocusContext = /*#__PURE__*/ (0, (react__WEBPACK_IMPORTED_MODULE_0___default())).createContext(null);\nconst $9bf71ea28793e738$var$RESTORE_FOCUS_EVENT = \"react-aria-focus-scope-restore\";\nlet $9bf71ea28793e738$var$activeScope = null;\nfunction $9bf71ea28793e738$export$20e40289641fbbb6(props) {\n    let { children: children, contain: contain, restoreFocus: restoreFocus, autoFocus: autoFocus } = props;\n    let startRef = (0, react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    let endRef = (0, react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    let scopeRef = (0, react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n    let { parentNode: parentNode } = (0, react__WEBPACK_IMPORTED_MODULE_0__.useContext)($9bf71ea28793e738$var$FocusContext) || {};\n    // Create a tree node here so we can add children to it even before it is added to the tree.\n    let node = (0, react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>new $9bf71ea28793e738$var$TreeNode({\n            scopeRef: scopeRef\n        }), [\n        scopeRef\n    ]);\n    (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(()=>{\n        // If a new scope mounts outside the active scope, (e.g. DialogContainer launched from a menu),\n        // use the active scope as the parent instead of the parent from context. Layout effects run bottom\n        // up, so if the parent is not yet added to the tree, don't do this. Only the outer-most FocusScope\n        // that is being added should get the activeScope as its parent.\n        let parent = parentNode || $9bf71ea28793e738$export$d06fae2ee68b101e.root;\n        if ($9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(parent.scopeRef) && $9bf71ea28793e738$var$activeScope && !$9bf71ea28793e738$var$isAncestorScope($9bf71ea28793e738$var$activeScope, parent.scopeRef)) {\n            let activeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode($9bf71ea28793e738$var$activeScope);\n            if (activeNode) parent = activeNode;\n        }\n        // Add the node to the parent, and to the tree.\n        parent.addChild(node);\n        $9bf71ea28793e738$export$d06fae2ee68b101e.addNode(node);\n    }, [\n        node,\n        parentNode\n    ]);\n    (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(()=>{\n        let node = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef);\n        if (node) node.contain = !!contain;\n    }, [\n        contain\n    ]);\n    (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(()=>{\n        var _startRef_current;\n        // Find all rendered nodes between the sentinels and add them to the scope.\n        let node = (_startRef_current = startRef.current) === null || _startRef_current === void 0 ? void 0 : _startRef_current.nextSibling;\n        let nodes = [];\n        let stopPropagation = (e)=>e.stopPropagation();\n        while(node && node !== endRef.current){\n            nodes.push(node);\n            // Stop custom restore focus event from propagating to parent focus scopes.\n            node.addEventListener($9bf71ea28793e738$var$RESTORE_FOCUS_EVENT, stopPropagation);\n            node = node.nextSibling;\n        }\n        scopeRef.current = nodes;\n        return ()=>{\n            for (let node of nodes)node.removeEventListener($9bf71ea28793e738$var$RESTORE_FOCUS_EVENT, stopPropagation);\n        };\n    }, [\n        children\n    ]);\n    $9bf71ea28793e738$var$useActiveScopeTracker(scopeRef, restoreFocus, contain);\n    $9bf71ea28793e738$var$useFocusContainment(scopeRef, contain);\n    $9bf71ea28793e738$var$useRestoreFocus(scopeRef, restoreFocus, contain);\n    $9bf71ea28793e738$var$useAutoFocus(scopeRef, autoFocus);\n    // This needs to be an effect so that activeScope is updated after the FocusScope tree is complete.\n    // It cannot be a useLayoutEffect because the parent of this node hasn't been attached in the tree yet.\n    (0, react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const activeElement = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.getOwnerDocument)(scopeRef.current ? scopeRef.current[0] : undefined).activeElement;\n        let scope = null;\n        if ($9bf71ea28793e738$var$isElementInScope(activeElement, scopeRef.current)) {\n            // We need to traverse the focusScope tree and find the bottom most scope that\n            // contains the active element and set that as the activeScope.\n            for (let node of $9bf71ea28793e738$export$d06fae2ee68b101e.traverse())if (node.scopeRef && $9bf71ea28793e738$var$isElementInScope(activeElement, node.scopeRef.current)) scope = node;\n            if (scope === $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef)) $9bf71ea28793e738$var$activeScope = scope.scopeRef;\n        }\n    }, [\n        scopeRef\n    ]);\n    // This layout effect cleanup is so that the tree node is removed synchronously with react before the RAF\n    // in useRestoreFocus cleanup runs.\n    (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(()=>{\n        return ()=>{\n            var _focusScopeTree_getTreeNode_parent, _focusScopeTree_getTreeNode;\n            var _focusScopeTree_getTreeNode_parent_scopeRef;\n            // Scope may have been re-parented.\n            let parentScope = (_focusScopeTree_getTreeNode_parent_scopeRef = (_focusScopeTree_getTreeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef)) === null || _focusScopeTree_getTreeNode === void 0 ? void 0 : (_focusScopeTree_getTreeNode_parent = _focusScopeTree_getTreeNode.parent) === null || _focusScopeTree_getTreeNode_parent === void 0 ? void 0 : _focusScopeTree_getTreeNode_parent.scopeRef) !== null && _focusScopeTree_getTreeNode_parent_scopeRef !== void 0 ? _focusScopeTree_getTreeNode_parent_scopeRef : null;\n            if ((scopeRef === $9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope(scopeRef, $9bf71ea28793e738$var$activeScope)) && (!parentScope || $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(parentScope))) $9bf71ea28793e738$var$activeScope = parentScope;\n            $9bf71ea28793e738$export$d06fae2ee68b101e.removeTreeNode(scopeRef);\n        };\n    }, [\n        scopeRef\n    ]);\n    let focusManager = (0, react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>$9bf71ea28793e738$var$createFocusManagerForScope(scopeRef), []);\n    let value = (0, react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>({\n            focusManager: focusManager,\n            parentNode: node\n        }), [\n        node,\n        focusManager\n    ]);\n    return /*#__PURE__*/ (0, (react__WEBPACK_IMPORTED_MODULE_0___default())).createElement($9bf71ea28793e738$var$FocusContext.Provider, {\n        value: value\n    }, /*#__PURE__*/ (0, (react__WEBPACK_IMPORTED_MODULE_0___default())).createElement(\"span\", {\n        \"data-focus-scope-start\": true,\n        hidden: true,\n        ref: startRef\n    }), children, /*#__PURE__*/ (0, (react__WEBPACK_IMPORTED_MODULE_0___default())).createElement(\"span\", {\n        \"data-focus-scope-end\": true,\n        hidden: true,\n        ref: endRef\n    }));\n}\nfunction $9bf71ea28793e738$export$10c5169755ce7bd7() {\n    var _useContext;\n    return (_useContext = (0, react__WEBPACK_IMPORTED_MODULE_0__.useContext)($9bf71ea28793e738$var$FocusContext)) === null || _useContext === void 0 ? void 0 : _useContext.focusManager;\n}\nfunction $9bf71ea28793e738$var$createFocusManagerForScope(scopeRef) {\n    return {\n        focusNext (opts = {}) {\n            let scope = scopeRef.current;\n            let { from: from, tabbable: tabbable, wrap: wrap, accept: accept } = opts;\n            let node = from || (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.getOwnerDocument)(scope[0]).activeElement;\n            let sentinel = scope[0].previousElementSibling;\n            let scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);\n            let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {\n                tabbable: tabbable,\n                accept: accept\n            }, scope);\n            walker.currentNode = $9bf71ea28793e738$var$isElementInScope(node, scope) ? node : sentinel;\n            let nextNode = walker.nextNode();\n            if (!nextNode && wrap) {\n                walker.currentNode = sentinel;\n                nextNode = walker.nextNode();\n            }\n            if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);\n            return nextNode;\n        },\n        focusPrevious (opts = {}) {\n            let scope = scopeRef.current;\n            let { from: from, tabbable: tabbable, wrap: wrap, accept: accept } = opts;\n            let node = from || (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.getOwnerDocument)(scope[0]).activeElement;\n            let sentinel = scope[scope.length - 1].nextElementSibling;\n            let scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);\n            let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {\n                tabbable: tabbable,\n                accept: accept\n            }, scope);\n            walker.currentNode = $9bf71ea28793e738$var$isElementInScope(node, scope) ? node : sentinel;\n            let previousNode = walker.previousNode();\n            if (!previousNode && wrap) {\n                walker.currentNode = sentinel;\n                previousNode = walker.previousNode();\n            }\n            if (previousNode) $9bf71ea28793e738$var$focusElement(previousNode, true);\n            return previousNode;\n        },\n        focusFirst (opts = {}) {\n            let scope = scopeRef.current;\n            let { tabbable: tabbable, accept: accept } = opts;\n            let scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);\n            let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {\n                tabbable: tabbable,\n                accept: accept\n            }, scope);\n            walker.currentNode = scope[0].previousElementSibling;\n            let nextNode = walker.nextNode();\n            if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);\n            return nextNode;\n        },\n        focusLast (opts = {}) {\n            let scope = scopeRef.current;\n            let { tabbable: tabbable, accept: accept } = opts;\n            let scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);\n            let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {\n                tabbable: tabbable,\n                accept: accept\n            }, scope);\n            walker.currentNode = scope[scope.length - 1].nextElementSibling;\n            let previousNode = walker.previousNode();\n            if (previousNode) $9bf71ea28793e738$var$focusElement(previousNode, true);\n            return previousNode;\n        }\n    };\n}\nconst $9bf71ea28793e738$var$focusableElements = [\n    \"input:not([disabled]):not([type=hidden])\",\n    \"select:not([disabled])\",\n    \"textarea:not([disabled])\",\n    \"button:not([disabled])\",\n    \"a[href]\",\n    \"area[href]\",\n    \"summary\",\n    \"iframe\",\n    \"object\",\n    \"embed\",\n    \"audio[controls]\",\n    \"video[controls]\",\n    \"[contenteditable]\"\n];\nconst $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR = $9bf71ea28793e738$var$focusableElements.join(\":not([hidden]),\") + \",[tabindex]:not([disabled]):not([hidden])\";\n$9bf71ea28793e738$var$focusableElements.push('[tabindex]:not([tabindex=\"-1\"]):not([disabled])');\nconst $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR = $9bf71ea28793e738$var$focusableElements.join(':not([hidden]):not([tabindex=\"-1\"]),');\nfunction $9bf71ea28793e738$export$4c063cf1350e6fed(element) {\n    return element.matches($9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR);\n}\nfunction $9bf71ea28793e738$var$getScopeRoot(scope) {\n    return scope[0].parentElement;\n}\nfunction $9bf71ea28793e738$var$shouldContainFocus(scopeRef) {\n    let scope = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode($9bf71ea28793e738$var$activeScope);\n    while(scope && scope.scopeRef !== scopeRef){\n        if (scope.contain) return false;\n        scope = scope.parent;\n    }\n    return true;\n}\nfunction $9bf71ea28793e738$var$useFocusContainment(scopeRef, contain) {\n    let focusedNode = (0, react__WEBPACK_IMPORTED_MODULE_0__.useRef)(undefined);\n    let raf = (0, react__WEBPACK_IMPORTED_MODULE_0__.useRef)(undefined);\n    (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(()=>{\n        let scope = scopeRef.current;\n        if (!contain) {\n            // if contain was changed, then we should cancel any ongoing waits to pull focus back into containment\n            if (raf.current) {\n                cancelAnimationFrame(raf.current);\n                raf.current = undefined;\n            }\n            return;\n        }\n        const ownerDocument = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.getOwnerDocument)(scope ? scope[0] : undefined);\n        // Handle the Tab key to contain focus within the scope\n        let onKeyDown = (e)=>{\n            if (e.key !== \"Tab\" || e.altKey || e.ctrlKey || e.metaKey || !$9bf71ea28793e738$var$shouldContainFocus(scopeRef) || e.isComposing) return;\n            let focusedElement = ownerDocument.activeElement;\n            let scope = scopeRef.current;\n            if (!scope || !$9bf71ea28793e738$var$isElementInScope(focusedElement, scope)) return;\n            let scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);\n            let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {\n                tabbable: true\n            }, scope);\n            if (!focusedElement) return;\n            walker.currentNode = focusedElement;\n            let nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n            if (!nextElement) {\n                walker.currentNode = e.shiftKey ? scope[scope.length - 1].nextElementSibling : scope[0].previousElementSibling;\n                nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n            }\n            e.preventDefault();\n            if (nextElement) $9bf71ea28793e738$var$focusElement(nextElement, true);\n        };\n        let onFocus = (e)=>{\n            // If focusing an element in a child scope of the currently active scope, the child becomes active.\n            // Moving out of the active scope to an ancestor is not allowed.\n            if ((!$9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope($9bf71ea28793e738$var$activeScope, scopeRef)) && $9bf71ea28793e738$var$isElementInScope(e.target, scopeRef.current)) {\n                $9bf71ea28793e738$var$activeScope = scopeRef;\n                focusedNode.current = e.target;\n            } else if ($9bf71ea28793e738$var$shouldContainFocus(scopeRef) && !$9bf71ea28793e738$var$isElementInChildScope(e.target, scopeRef)) {\n                // If a focus event occurs outside the active scope (e.g. user tabs from browser location bar),\n                // restore focus to the previously focused node or the first tabbable element in the active scope.\n                if (focusedNode.current) focusedNode.current.focus();\n                else if ($9bf71ea28793e738$var$activeScope && $9bf71ea28793e738$var$activeScope.current) $9bf71ea28793e738$var$focusFirstInScope($9bf71ea28793e738$var$activeScope.current);\n            } else if ($9bf71ea28793e738$var$shouldContainFocus(scopeRef)) focusedNode.current = e.target;\n        };\n        let onBlur = (e)=>{\n            // Firefox doesn't shift focus back to the Dialog properly without this\n            if (raf.current) cancelAnimationFrame(raf.current);\n            raf.current = requestAnimationFrame(()=>{\n                // Use document.activeElement instead of e.relatedTarget so we can tell if user clicked into iframe\n                if (ownerDocument.activeElement && $9bf71ea28793e738$var$shouldContainFocus(scopeRef) && !$9bf71ea28793e738$var$isElementInChildScope(ownerDocument.activeElement, scopeRef)) {\n                    $9bf71ea28793e738$var$activeScope = scopeRef;\n                    if (ownerDocument.body.contains(e.target)) {\n                        var _focusedNode_current;\n                        focusedNode.current = e.target;\n                        (_focusedNode_current = focusedNode.current) === null || _focusedNode_current === void 0 ? void 0 : _focusedNode_current.focus();\n                    } else if ($9bf71ea28793e738$var$activeScope.current) $9bf71ea28793e738$var$focusFirstInScope($9bf71ea28793e738$var$activeScope.current);\n                }\n            });\n        };\n        ownerDocument.addEventListener(\"keydown\", onKeyDown, false);\n        ownerDocument.addEventListener(\"focusin\", onFocus, false);\n        scope === null || scope === void 0 ? void 0 : scope.forEach((element)=>element.addEventListener(\"focusin\", onFocus, false));\n        scope === null || scope === void 0 ? void 0 : scope.forEach((element)=>element.addEventListener(\"focusout\", onBlur, false));\n        return ()=>{\n            ownerDocument.removeEventListener(\"keydown\", onKeyDown, false);\n            ownerDocument.removeEventListener(\"focusin\", onFocus, false);\n            scope === null || scope === void 0 ? void 0 : scope.forEach((element)=>element.removeEventListener(\"focusin\", onFocus, false));\n            scope === null || scope === void 0 ? void 0 : scope.forEach((element)=>element.removeEventListener(\"focusout\", onBlur, false));\n        };\n    }, [\n        scopeRef,\n        contain\n    ]);\n    // This is a useLayoutEffect so it is guaranteed to run before our async synthetic blur\n    // eslint-disable-next-line arrow-body-style\n    (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(()=>{\n        return ()=>{\n            if (raf.current) cancelAnimationFrame(raf.current);\n        };\n    }, [\n        raf\n    ]);\n}\nfunction $9bf71ea28793e738$var$isElementInAnyScope(element) {\n    return $9bf71ea28793e738$var$isElementInChildScope(element);\n}\nfunction $9bf71ea28793e738$var$isElementInScope(element, scope) {\n    if (!element) return false;\n    if (!scope) return false;\n    return scope.some((node)=>node.contains(element));\n}\nfunction $9bf71ea28793e738$var$isElementInChildScope(element, scope = null) {\n    // If the element is within a top layer element (e.g. toasts), always allow moving focus there.\n    if (element instanceof Element && element.closest(\"[data-react-aria-top-layer]\")) return true;\n    // node.contains in isElementInScope covers child scopes that are also DOM children,\n    // but does not cover child scopes in portals.\n    for (let { scopeRef: s } of $9bf71ea28793e738$export$d06fae2ee68b101e.traverse($9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scope))){\n        if (s && $9bf71ea28793e738$var$isElementInScope(element, s.current)) return true;\n    }\n    return false;\n}\nfunction $9bf71ea28793e738$export$1258395f99bf9cbf(element) {\n    return $9bf71ea28793e738$var$isElementInChildScope(element, $9bf71ea28793e738$var$activeScope);\n}\nfunction $9bf71ea28793e738$var$isAncestorScope(ancestor, scope) {\n    var _focusScopeTree_getTreeNode;\n    let parent = (_focusScopeTree_getTreeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scope)) === null || _focusScopeTree_getTreeNode === void 0 ? void 0 : _focusScopeTree_getTreeNode.parent;\n    while(parent){\n        if (parent.scopeRef === ancestor) return true;\n        parent = parent.parent;\n    }\n    return false;\n}\nfunction $9bf71ea28793e738$var$focusElement(element, scroll = false) {\n    if (element != null && !scroll) try {\n        (0, _focusSafely_mjs__WEBPACK_IMPORTED_MODULE_3__.focusSafely)(element);\n    } catch (err) {\n    // ignore\n    }\n    else if (element != null) try {\n        element.focus();\n    } catch (err) {\n    // ignore\n    }\n}\nfunction $9bf71ea28793e738$var$getFirstInScope(scope, tabbable = true) {\n    let sentinel = scope[0].previousElementSibling;\n    let scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);\n    let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {\n        tabbable: tabbable\n    }, scope);\n    walker.currentNode = sentinel;\n    let nextNode = walker.nextNode();\n    // If the scope does not contain a tabbable element, use the first focusable element.\n    if (tabbable && !nextNode) {\n        scopeRoot = $9bf71ea28793e738$var$getScopeRoot(scope);\n        walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(scopeRoot, {\n            tabbable: false\n        }, scope);\n        walker.currentNode = sentinel;\n        nextNode = walker.nextNode();\n    }\n    return nextNode;\n}\nfunction $9bf71ea28793e738$var$focusFirstInScope(scope, tabbable = true) {\n    $9bf71ea28793e738$var$focusElement($9bf71ea28793e738$var$getFirstInScope(scope, tabbable));\n}\nfunction $9bf71ea28793e738$var$useAutoFocus(scopeRef, autoFocus) {\n    const autoFocusRef = (0, (react__WEBPACK_IMPORTED_MODULE_0___default())).useRef(autoFocus);\n    (0, react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (autoFocusRef.current) {\n            $9bf71ea28793e738$var$activeScope = scopeRef;\n            const ownerDocument = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.getOwnerDocument)(scopeRef.current ? scopeRef.current[0] : undefined);\n            if (!$9bf71ea28793e738$var$isElementInScope(ownerDocument.activeElement, $9bf71ea28793e738$var$activeScope.current) && scopeRef.current) $9bf71ea28793e738$var$focusFirstInScope(scopeRef.current);\n        }\n        autoFocusRef.current = false;\n    }, [\n        scopeRef\n    ]);\n}\nfunction $9bf71ea28793e738$var$useActiveScopeTracker(scopeRef, restore, contain) {\n    // tracks the active scope, in case restore and contain are both false.\n    // if either are true, this is tracked in useRestoreFocus or useFocusContainment.\n    (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(()=>{\n        if (restore || contain) return;\n        let scope = scopeRef.current;\n        const ownerDocument = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.getOwnerDocument)(scope ? scope[0] : undefined);\n        let onFocus = (e)=>{\n            let target = e.target;\n            if ($9bf71ea28793e738$var$isElementInScope(target, scopeRef.current)) $9bf71ea28793e738$var$activeScope = scopeRef;\n            else if (!$9bf71ea28793e738$var$isElementInAnyScope(target)) $9bf71ea28793e738$var$activeScope = null;\n        };\n        ownerDocument.addEventListener(\"focusin\", onFocus, false);\n        scope === null || scope === void 0 ? void 0 : scope.forEach((element)=>element.addEventListener(\"focusin\", onFocus, false));\n        return ()=>{\n            ownerDocument.removeEventListener(\"focusin\", onFocus, false);\n            scope === null || scope === void 0 ? void 0 : scope.forEach((element)=>element.removeEventListener(\"focusin\", onFocus, false));\n        };\n    }, [\n        scopeRef,\n        restore,\n        contain\n    ]);\n}\nfunction $9bf71ea28793e738$var$shouldRestoreFocus(scopeRef) {\n    let scope = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode($9bf71ea28793e738$var$activeScope);\n    while(scope && scope.scopeRef !== scopeRef){\n        if (scope.nodeToRestore) return false;\n        scope = scope.parent;\n    }\n    return (scope === null || scope === void 0 ? void 0 : scope.scopeRef) === scopeRef;\n}\nfunction $9bf71ea28793e738$var$useRestoreFocus(scopeRef, restoreFocus, contain) {\n    // create a ref during render instead of useLayoutEffect so the active element is saved before a child with autoFocus=true mounts.\n    // eslint-disable-next-line no-restricted-globals\n    const nodeToRestoreRef = (0, react__WEBPACK_IMPORTED_MODULE_0__.useRef)(typeof document !== \"undefined\" ? (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.getOwnerDocument)(scopeRef.current ? scopeRef.current[0] : undefined).activeElement : null);\n    // restoring scopes should all track if they are active regardless of contain, but contain already tracks it plus logic to contain the focus\n    // restoring-non-containing scopes should only care if they become active so they can perform the restore\n    (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(()=>{\n        let scope = scopeRef.current;\n        const ownerDocument = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.getOwnerDocument)(scope ? scope[0] : undefined);\n        if (!restoreFocus || contain) return;\n        let onFocus = ()=>{\n            // If focusing an element in a child scope of the currently active scope, the child becomes active.\n            // Moving out of the active scope to an ancestor is not allowed.\n            if ((!$9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope($9bf71ea28793e738$var$activeScope, scopeRef)) && $9bf71ea28793e738$var$isElementInScope(ownerDocument.activeElement, scopeRef.current)) $9bf71ea28793e738$var$activeScope = scopeRef;\n        };\n        ownerDocument.addEventListener(\"focusin\", onFocus, false);\n        scope === null || scope === void 0 ? void 0 : scope.forEach((element)=>element.addEventListener(\"focusin\", onFocus, false));\n        return ()=>{\n            ownerDocument.removeEventListener(\"focusin\", onFocus, false);\n            scope === null || scope === void 0 ? void 0 : scope.forEach((element)=>element.removeEventListener(\"focusin\", onFocus, false));\n        };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        scopeRef,\n        contain\n    ]);\n    (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(()=>{\n        const ownerDocument = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.getOwnerDocument)(scopeRef.current ? scopeRef.current[0] : undefined);\n        if (!restoreFocus) return;\n        // Handle the Tab key so that tabbing out of the scope goes to the next element\n        // after the node that had focus when the scope mounted. This is important when\n        // using portals for overlays, so that focus goes to the expected element when\n        // tabbing out of the overlay.\n        let onKeyDown = (e)=>{\n            if (e.key !== \"Tab\" || e.altKey || e.ctrlKey || e.metaKey || !$9bf71ea28793e738$var$shouldContainFocus(scopeRef) || e.isComposing) return;\n            let focusedElement = ownerDocument.activeElement;\n            if (!$9bf71ea28793e738$var$isElementInScope(focusedElement, scopeRef.current)) return;\n            let treeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef);\n            if (!treeNode) return;\n            let nodeToRestore = treeNode.nodeToRestore;\n            // Create a DOM tree walker that matches all tabbable elements\n            let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(ownerDocument.body, {\n                tabbable: true\n            });\n            // Find the next tabbable element after the currently focused element\n            walker.currentNode = focusedElement;\n            let nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n            if (!nodeToRestore || !ownerDocument.body.contains(nodeToRestore) || nodeToRestore === ownerDocument.body) {\n                nodeToRestore = undefined;\n                treeNode.nodeToRestore = undefined;\n            }\n            // If there is no next element, or it is outside the current scope, move focus to the\n            // next element after the node to restore to instead.\n            if ((!nextElement || !$9bf71ea28793e738$var$isElementInScope(nextElement, scopeRef.current)) && nodeToRestore) {\n                walker.currentNode = nodeToRestore;\n                // Skip over elements within the scope, in case the scope immediately follows the node to restore.\n                do nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n                while ($9bf71ea28793e738$var$isElementInScope(nextElement, scopeRef.current));\n                e.preventDefault();\n                e.stopPropagation();\n                if (nextElement) $9bf71ea28793e738$var$focusElement(nextElement, true);\n                else // then move focus to the body.\n                // Otherwise restore focus to the nodeToRestore (e.g menu within a popover -> tabbing to close the menu should move focus to menu trigger)\n                if (!$9bf71ea28793e738$var$isElementInAnyScope(nodeToRestore)) focusedElement.blur();\n                else $9bf71ea28793e738$var$focusElement(nodeToRestore, true);\n            }\n        };\n        if (!contain) ownerDocument.addEventListener(\"keydown\", onKeyDown, true);\n        return ()=>{\n            if (!contain) ownerDocument.removeEventListener(\"keydown\", onKeyDown, true);\n        };\n    }, [\n        scopeRef,\n        restoreFocus,\n        contain\n    ]);\n    // useLayoutEffect instead of useEffect so the active element is saved synchronously instead of asynchronously.\n    (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(()=>{\n        const ownerDocument = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.getOwnerDocument)(scopeRef.current ? scopeRef.current[0] : undefined);\n        if (!restoreFocus) return;\n        let treeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef);\n        if (!treeNode) return;\n        var _nodeToRestoreRef_current;\n        treeNode.nodeToRestore = (_nodeToRestoreRef_current = nodeToRestoreRef.current) !== null && _nodeToRestoreRef_current !== void 0 ? _nodeToRestoreRef_current : undefined;\n        return ()=>{\n            let treeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef);\n            if (!treeNode) return;\n            let nodeToRestore = treeNode.nodeToRestore;\n            // if we already lost focus to the body and this was the active scope, then we should attempt to restore\n            if (restoreFocus && nodeToRestore && // eslint-disable-next-line react-hooks/exhaustive-deps\n            ($9bf71ea28793e738$var$isElementInScope(ownerDocument.activeElement, scopeRef.current) || ownerDocument.activeElement === ownerDocument.body && $9bf71ea28793e738$var$shouldRestoreFocus(scopeRef))) {\n                // freeze the focusScopeTree so it persists after the raf, otherwise during unmount nodes are removed from it\n                let clonedTree = $9bf71ea28793e738$export$d06fae2ee68b101e.clone();\n                requestAnimationFrame(()=>{\n                    // Only restore focus if we've lost focus to the body, the alternative is that focus has been purposefully moved elsewhere\n                    if (ownerDocument.activeElement === ownerDocument.body) {\n                        // look up the tree starting with our scope to find a nodeToRestore still in the DOM\n                        let treeNode = clonedTree.getTreeNode(scopeRef);\n                        while(treeNode){\n                            if (treeNode.nodeToRestore && treeNode.nodeToRestore.isConnected) {\n                                $9bf71ea28793e738$var$restoreFocusToElement(treeNode.nodeToRestore);\n                                return;\n                            }\n                            treeNode = treeNode.parent;\n                        }\n                        // If no nodeToRestore was found, focus the first element in the nearest\n                        // ancestor scope that is still in the tree.\n                        treeNode = clonedTree.getTreeNode(scopeRef);\n                        while(treeNode){\n                            if (treeNode.scopeRef && treeNode.scopeRef.current && $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(treeNode.scopeRef)) {\n                                let node = $9bf71ea28793e738$var$getFirstInScope(treeNode.scopeRef.current, true);\n                                $9bf71ea28793e738$var$restoreFocusToElement(node);\n                                return;\n                            }\n                            treeNode = treeNode.parent;\n                        }\n                    }\n                });\n            }\n        };\n    }, [\n        scopeRef,\n        restoreFocus\n    ]);\n}\nfunction $9bf71ea28793e738$var$restoreFocusToElement(node) {\n    // Dispatch a custom event that parent elements can intercept to customize focus restoration.\n    // For example, virtualized collection components reuse DOM elements, so the original element\n    // might still exist in the DOM but representing a different item.\n    if (node.dispatchEvent(new CustomEvent($9bf71ea28793e738$var$RESTORE_FOCUS_EVENT, {\n        bubbles: true,\n        cancelable: true\n    }))) $9bf71ea28793e738$var$focusElement(node);\n}\nfunction $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, opts, scope) {\n    let selector = (opts === null || opts === void 0 ? void 0 : opts.tabbable) ? $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR : $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR;\n    let walker = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.getOwnerDocument)(root).createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {\n        acceptNode (node) {\n            var _opts_from;\n            // Skip nodes inside the starting node.\n            if (opts === null || opts === void 0 ? void 0 : (_opts_from = opts.from) === null || _opts_from === void 0 ? void 0 : _opts_from.contains(node)) return NodeFilter.FILTER_REJECT;\n            if (node.matches(selector) && (0, _isElementVisible_mjs__WEBPACK_IMPORTED_MODULE_4__.isElementVisible)(node) && (!scope || $9bf71ea28793e738$var$isElementInScope(node, scope)) && (!(opts === null || opts === void 0 ? void 0 : opts.accept) || opts.accept(node))) return NodeFilter.FILTER_ACCEPT;\n            return NodeFilter.FILTER_SKIP;\n        }\n    });\n    if (opts === null || opts === void 0 ? void 0 : opts.from) walker.currentNode = opts.from;\n    return walker;\n}\nfunction $9bf71ea28793e738$export$c5251b9e124bf29(ref, defaultOptions = {}) {\n    return {\n        focusNext (opts = {}) {\n            let root = ref.current;\n            if (!root) return null;\n            let { from: from, tabbable: tabbable = defaultOptions.tabbable, wrap: wrap = defaultOptions.wrap, accept: accept = defaultOptions.accept } = opts;\n            let node = from || (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.getOwnerDocument)(root).activeElement;\n            let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {\n                tabbable: tabbable,\n                accept: accept\n            });\n            if (root.contains(node)) walker.currentNode = node;\n            let nextNode = walker.nextNode();\n            if (!nextNode && wrap) {\n                walker.currentNode = root;\n                nextNode = walker.nextNode();\n            }\n            if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);\n            return nextNode;\n        },\n        focusPrevious (opts = defaultOptions) {\n            let root = ref.current;\n            if (!root) return null;\n            let { from: from, tabbable: tabbable = defaultOptions.tabbable, wrap: wrap = defaultOptions.wrap, accept: accept = defaultOptions.accept } = opts;\n            let node = from || (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.getOwnerDocument)(root).activeElement;\n            let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {\n                tabbable: tabbable,\n                accept: accept\n            });\n            if (root.contains(node)) walker.currentNode = node;\n            else {\n                let next = $9bf71ea28793e738$var$last(walker);\n                if (next) $9bf71ea28793e738$var$focusElement(next, true);\n                return next !== null && next !== void 0 ? next : null;\n            }\n            let previousNode = walker.previousNode();\n            if (!previousNode && wrap) {\n                walker.currentNode = root;\n                let lastNode = $9bf71ea28793e738$var$last(walker);\n                if (!lastNode) return null;\n                previousNode = lastNode;\n            }\n            if (previousNode) $9bf71ea28793e738$var$focusElement(previousNode, true);\n            return previousNode !== null && previousNode !== void 0 ? previousNode : null;\n        },\n        focusFirst (opts = defaultOptions) {\n            let root = ref.current;\n            if (!root) return null;\n            let { tabbable: tabbable = defaultOptions.tabbable, accept: accept = defaultOptions.accept } = opts;\n            let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {\n                tabbable: tabbable,\n                accept: accept\n            });\n            let nextNode = walker.nextNode();\n            if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);\n            return nextNode;\n        },\n        focusLast (opts = defaultOptions) {\n            let root = ref.current;\n            if (!root) return null;\n            let { tabbable: tabbable = defaultOptions.tabbable, accept: accept = defaultOptions.accept } = opts;\n            let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {\n                tabbable: tabbable,\n                accept: accept\n            });\n            let next = $9bf71ea28793e738$var$last(walker);\n            if (next) $9bf71ea28793e738$var$focusElement(next, true);\n            return next !== null && next !== void 0 ? next : null;\n        }\n    };\n}\nfunction $9bf71ea28793e738$var$last(walker) {\n    let next = undefined;\n    let last;\n    do {\n        last = walker.lastChild();\n        if (last) next = last;\n    }while (last);\n    return next;\n}\nclass $9bf71ea28793e738$var$Tree {\n    get size() {\n        return this.fastMap.size;\n    }\n    getTreeNode(data) {\n        return this.fastMap.get(data);\n    }\n    addTreeNode(scopeRef, parent, nodeToRestore) {\n        let parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);\n        if (!parentNode) return;\n        let node = new $9bf71ea28793e738$var$TreeNode({\n            scopeRef: scopeRef\n        });\n        parentNode.addChild(node);\n        node.parent = parentNode;\n        this.fastMap.set(scopeRef, node);\n        if (nodeToRestore) node.nodeToRestore = nodeToRestore;\n    }\n    addNode(node) {\n        this.fastMap.set(node.scopeRef, node);\n    }\n    removeTreeNode(scopeRef) {\n        // never remove the root\n        if (scopeRef === null) return;\n        let node = this.fastMap.get(scopeRef);\n        if (!node) return;\n        let parentNode = node.parent;\n        // when we remove a scope, check if any sibling scopes are trying to restore focus to something inside the scope we're removing\n        // if we are, then replace the siblings restore with the restore from the scope we're removing\n        for (let current of this.traverse())if (current !== node && node.nodeToRestore && current.nodeToRestore && node.scopeRef && node.scopeRef.current && $9bf71ea28793e738$var$isElementInScope(current.nodeToRestore, node.scopeRef.current)) current.nodeToRestore = node.nodeToRestore;\n        let children = node.children;\n        if (parentNode) {\n            parentNode.removeChild(node);\n            if (children.size > 0) children.forEach((child)=>parentNode && parentNode.addChild(child));\n        }\n        this.fastMap.delete(node.scopeRef);\n    }\n    // Pre Order Depth First\n    *traverse(node = this.root) {\n        if (node.scopeRef != null) yield node;\n        if (node.children.size > 0) for (let child of node.children)yield* this.traverse(child);\n    }\n    clone() {\n        var _node_parent;\n        let newTree = new $9bf71ea28793e738$var$Tree();\n        var _node_parent_scopeRef;\n        for (let node of this.traverse())newTree.addTreeNode(node.scopeRef, (_node_parent_scopeRef = (_node_parent = node.parent) === null || _node_parent === void 0 ? void 0 : _node_parent.scopeRef) !== null && _node_parent_scopeRef !== void 0 ? _node_parent_scopeRef : null, node.nodeToRestore);\n        return newTree;\n    }\n    constructor(){\n        this.fastMap = new Map();\n        this.root = new $9bf71ea28793e738$var$TreeNode({\n            scopeRef: null\n        });\n        this.fastMap.set(null, this.root);\n    }\n}\nclass $9bf71ea28793e738$var$TreeNode {\n    addChild(node) {\n        this.children.add(node);\n        node.parent = this;\n    }\n    removeChild(node) {\n        this.children.delete(node);\n        node.parent = undefined;\n    }\n    constructor(props){\n        this.children = new Set();\n        this.contain = false;\n        this.scopeRef = props.scopeRef;\n    }\n}\nlet $9bf71ea28793e738$export$d06fae2ee68b101e = new $9bf71ea28793e738$var$Tree();\n //# sourceMappingURL=FocusScope.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/.pnpm/@react-aria+focus@3.18.3_react@18.3.1/node_modules/@react-aria/focus/dist/FocusScope.mjs\n");

/***/ }),

/***/ "(ssr)/../node_modules/.pnpm/@react-aria+focus@3.18.3_react@18.3.1/node_modules/@react-aria/focus/dist/focusSafely.mjs":
/*!***********************************************************************************************************************!*\
  !*** ../node_modules/.pnpm/@react-aria+focus@3.18.3_react@18.3.1/node_modules/@react-aria/focus/dist/focusSafely.mjs ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   focusSafely: () => (/* binding */ $6a99195332edec8b$export$80f3e147d781571c)\n/* harmony export */ });\n/* harmony import */ var _react_aria_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @react-aria/utils */ \"(ssr)/../node_modules/.pnpm/@react-aria+utils@3.25.3_react@18.3.1/node_modules/@react-aria/utils/dist/domHelpers.mjs\");\n/* harmony import */ var _react_aria_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-aria/utils */ \"(ssr)/../node_modules/.pnpm/@react-aria+utils@3.25.3_react@18.3.1/node_modules/@react-aria/utils/dist/runAfterTransition.mjs\");\n/* harmony import */ var _react_aria_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @react-aria/utils */ \"(ssr)/../node_modules/.pnpm/@react-aria+utils@3.25.3_react@18.3.1/node_modules/@react-aria/utils/dist/focusWithoutScrolling.mjs\");\n/* harmony import */ var _react_aria_interactions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @react-aria/interactions */ \"(ssr)/../node_modules/.pnpm/@react-aria+interactions@3.22.3_react@18.3.1/node_modules/@react-aria/interactions/dist/useFocusVisible.mjs\");\n\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ function $6a99195332edec8b$export$80f3e147d781571c(element) {\n    // If the user is interacting with a virtual cursor, e.g. screen reader, then\n    // wait until after any animated transitions that are currently occurring on\n    // the page before shifting focus. This avoids issues with VoiceOver on iOS\n    // causing the page to scroll when moving focus if the element is transitioning\n    // from off the screen.\n    const ownerDocument = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_0__.getOwnerDocument)(element);\n    if ((0, _react_aria_interactions__WEBPACK_IMPORTED_MODULE_1__.getInteractionModality)() === \"virtual\") {\n        let lastFocusedElement = ownerDocument.activeElement;\n        (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.runAfterTransition)(()=>{\n            // If focus did not move and the element is still in the document, focus it.\n            if (ownerDocument.activeElement === lastFocusedElement && element.isConnected) (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_3__.focusWithoutScrolling)(element);\n        });\n    } else (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_3__.focusWithoutScrolling)(element);\n}\n //# sourceMappingURL=focusSafely.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0ByZWFjdC1hcmlhK2ZvY3VzQDMuMTguM19yZWFjdEAxOC4zLjEvbm9kZV9tb2R1bGVzL0ByZWFjdC1hcmlhL2ZvY3VzL2Rpc3QvZm9jdXNTYWZlbHkubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXNMO0FBQ3JGO0FBRWpHOzs7Ozs7Ozs7O0NBVUMsR0FFRCxTQUFTUSwwQ0FBMENDLE9BQU87SUFDdEQsNkVBQTZFO0lBQzdFLDRFQUE0RTtJQUM1RSwyRUFBMkU7SUFDM0UsK0VBQStFO0lBQy9FLHVCQUF1QjtJQUN2QixNQUFNQyxnQkFBZ0IsQ0FBQyxHQUFHVCwrREFBc0IsRUFBR1E7SUFDbkQsSUFBSSxDQUFDLEdBQUdGLDRFQUE0QixRQUFTLFdBQVc7UUFDcEQsSUFBSUkscUJBQXFCRCxjQUFjRSxhQUFhO1FBQ25ELElBQUdULGlFQUF3QixFQUFHO1lBQzNCLDRFQUE0RTtZQUM1RSxJQUFJTyxjQUFjRSxhQUFhLEtBQUtELHNCQUFzQkYsUUFBUUksV0FBVyxFQUFFLENBQUMsR0FBR1Isb0VBQTJCLEVBQUdJO1FBQ3JIO0lBQ0osT0FBTyxDQUFDLEdBQUdKLG9FQUEyQixFQUFHSTtBQUM3QztBQUdrRSxDQUNsRSw4Q0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1kb2NzLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9AcmVhY3QtYXJpYStmb2N1c0AzLjE4LjNfcmVhY3RAMTguMy4xL25vZGVfbW9kdWxlcy9AcmVhY3QtYXJpYS9mb2N1cy9kaXN0L2ZvY3VzU2FmZWx5Lm1qcz8yMTFiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Z2V0T3duZXJEb2N1bWVudCBhcyAkamxPYWkkZ2V0T3duZXJEb2N1bWVudCwgcnVuQWZ0ZXJUcmFuc2l0aW9uIGFzICRqbE9haSRydW5BZnRlclRyYW5zaXRpb24sIGZvY3VzV2l0aG91dFNjcm9sbGluZyBhcyAkamxPYWkkZm9jdXNXaXRob3V0U2Nyb2xsaW5nfSBmcm9tIFwiQHJlYWN0LWFyaWEvdXRpbHNcIjtcbmltcG9ydCB7Z2V0SW50ZXJhY3Rpb25Nb2RhbGl0eSBhcyAkamxPYWkkZ2V0SW50ZXJhY3Rpb25Nb2RhbGl0eX0gZnJvbSBcIkByZWFjdC1hcmlhL2ludGVyYWN0aW9uc1wiO1xuXG4vKlxuICogQ29weXJpZ2h0IDIwMjAgQWRvYmUuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBUaGlzIGZpbGUgaXMgbGljZW5zZWQgdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAnTGljZW5zZScpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5IG9idGFpbiBhIGNvcHlcbiAqIG9mIHRoZSBMaWNlbnNlIGF0IGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXJcbiAqIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICdBUyBJUycgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBSRVBSRVNFTlRBVElPTlNcbiAqIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZVxuICogZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqLyBcblxuZnVuY3Rpb24gJDZhOTkxOTUzMzJlZGVjOGIkZXhwb3J0JDgwZjNlMTQ3ZDc4MTU3MWMoZWxlbWVudCkge1xuICAgIC8vIElmIHRoZSB1c2VyIGlzIGludGVyYWN0aW5nIHdpdGggYSB2aXJ0dWFsIGN1cnNvciwgZS5nLiBzY3JlZW4gcmVhZGVyLCB0aGVuXG4gICAgLy8gd2FpdCB1bnRpbCBhZnRlciBhbnkgYW5pbWF0ZWQgdHJhbnNpdGlvbnMgdGhhdCBhcmUgY3VycmVudGx5IG9jY3VycmluZyBvblxuICAgIC8vIHRoZSBwYWdlIGJlZm9yZSBzaGlmdGluZyBmb2N1cy4gVGhpcyBhdm9pZHMgaXNzdWVzIHdpdGggVm9pY2VPdmVyIG9uIGlPU1xuICAgIC8vIGNhdXNpbmcgdGhlIHBhZ2UgdG8gc2Nyb2xsIHdoZW4gbW92aW5nIGZvY3VzIGlmIHRoZSBlbGVtZW50IGlzIHRyYW5zaXRpb25pbmdcbiAgICAvLyBmcm9tIG9mZiB0aGUgc2NyZWVuLlxuICAgIGNvbnN0IG93bmVyRG9jdW1lbnQgPSAoMCwgJGpsT2FpJGdldE93bmVyRG9jdW1lbnQpKGVsZW1lbnQpO1xuICAgIGlmICgoMCwgJGpsT2FpJGdldEludGVyYWN0aW9uTW9kYWxpdHkpKCkgPT09ICd2aXJ0dWFsJykge1xuICAgICAgICBsZXQgbGFzdEZvY3VzZWRFbGVtZW50ID0gb3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuICAgICAgICAoMCwgJGpsT2FpJHJ1bkFmdGVyVHJhbnNpdGlvbikoKCk9PntcbiAgICAgICAgICAgIC8vIElmIGZvY3VzIGRpZCBub3QgbW92ZSBhbmQgdGhlIGVsZW1lbnQgaXMgc3RpbGwgaW4gdGhlIGRvY3VtZW50LCBmb2N1cyBpdC5cbiAgICAgICAgICAgIGlmIChvd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgPT09IGxhc3RGb2N1c2VkRWxlbWVudCAmJiBlbGVtZW50LmlzQ29ubmVjdGVkKSAoMCwgJGpsT2FpJGZvY3VzV2l0aG91dFNjcm9sbGluZykoZWxlbWVudCk7XG4gICAgICAgIH0pO1xuICAgIH0gZWxzZSAoMCwgJGpsT2FpJGZvY3VzV2l0aG91dFNjcm9sbGluZykoZWxlbWVudCk7XG59XG5cblxuZXhwb3J0IHskNmE5OTE5NTMzMmVkZWM4YiRleHBvcnQkODBmM2UxNDdkNzgxNTcxYyBhcyBmb2N1c1NhZmVseX07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mb2N1c1NhZmVseS5tb2R1bGUuanMubWFwXG4iXSwibmFtZXMiOlsiZ2V0T3duZXJEb2N1bWVudCIsIiRqbE9haSRnZXRPd25lckRvY3VtZW50IiwicnVuQWZ0ZXJUcmFuc2l0aW9uIiwiJGpsT2FpJHJ1bkFmdGVyVHJhbnNpdGlvbiIsImZvY3VzV2l0aG91dFNjcm9sbGluZyIsIiRqbE9haSRmb2N1c1dpdGhvdXRTY3JvbGxpbmciLCJnZXRJbnRlcmFjdGlvbk1vZGFsaXR5IiwiJGpsT2FpJGdldEludGVyYWN0aW9uTW9kYWxpdHkiLCIkNmE5OTE5NTMzMmVkZWM4YiRleHBvcnQkODBmM2UxNDdkNzgxNTcxYyIsImVsZW1lbnQiLCJvd25lckRvY3VtZW50IiwibGFzdEZvY3VzZWRFbGVtZW50IiwiYWN0aXZlRWxlbWVudCIsImlzQ29ubmVjdGVkIiwiZm9jdXNTYWZlbHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/.pnpm/@react-aria+focus@3.18.3_react@18.3.1/node_modules/@react-aria/focus/dist/focusSafely.mjs\n");

/***/ }),

/***/ "(ssr)/../node_modules/.pnpm/@react-aria+focus@3.18.3_react@18.3.1/node_modules/@react-aria/focus/dist/isElementVisible.mjs":
/*!****************************************************************************************************************************!*\
  !*** ../node_modules/.pnpm/@react-aria+focus@3.18.3_react@18.3.1/node_modules/@react-aria/focus/dist/isElementVisible.mjs ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isElementVisible: () => (/* binding */ $645f2e67b85a24c9$export$e989c0fffaa6b27a)\n/* harmony export */ });\n/* harmony import */ var _react_aria_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @react-aria/utils */ \"(ssr)/../node_modules/.pnpm/@react-aria+utils@3.25.3_react@18.3.1/node_modules/@react-aria/utils/dist/domHelpers.mjs\");\n\n/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ function $645f2e67b85a24c9$var$isStyleVisible(element) {\n    const windowObject = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_0__.getOwnerWindow)(element);\n    if (!(element instanceof windowObject.HTMLElement) && !(element instanceof windowObject.SVGElement)) return false;\n    let { display: display, visibility: visibility } = element.style;\n    let isVisible = display !== \"none\" && visibility !== \"hidden\" && visibility !== \"collapse\";\n    if (isVisible) {\n        const { getComputedStyle: getComputedStyle } = element.ownerDocument.defaultView;\n        let { display: computedDisplay, visibility: computedVisibility } = getComputedStyle(element);\n        isVisible = computedDisplay !== \"none\" && computedVisibility !== \"hidden\" && computedVisibility !== \"collapse\";\n    }\n    return isVisible;\n}\nfunction $645f2e67b85a24c9$var$isAttributeVisible(element, childElement) {\n    return !element.hasAttribute(\"hidden\") && // Ignore HiddenSelect when tree walking.\n    !element.hasAttribute(\"data-react-aria-prevent-focus\") && (element.nodeName === \"DETAILS\" && childElement && childElement.nodeName !== \"SUMMARY\" ? element.hasAttribute(\"open\") : true);\n}\nfunction $645f2e67b85a24c9$export$e989c0fffaa6b27a(element, childElement) {\n    return element.nodeName !== \"#comment\" && $645f2e67b85a24c9$var$isStyleVisible(element) && $645f2e67b85a24c9$var$isAttributeVisible(element, childElement) && (!element.parentElement || $645f2e67b85a24c9$export$e989c0fffaa6b27a(element.parentElement, element));\n}\n //# sourceMappingURL=isElementVisible.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0ByZWFjdC1hcmlhK2ZvY3VzQDMuMTguM19yZWFjdEAxOC4zLjEvbm9kZV9tb2R1bGVzL0ByZWFjdC1hcmlhL2ZvY3VzL2Rpc3QvaXNFbGVtZW50VmlzaWJsZS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEU7QUFFMUU7Ozs7Ozs7Ozs7Q0FVQyxHQUNELFNBQVNFLHFDQUFxQ0MsT0FBTztJQUNqRCxNQUFNQyxlQUFlLENBQUMsR0FBR0gsNkRBQW9CLEVBQUdFO0lBQ2hELElBQUksQ0FBRUEsQ0FBQUEsbUJBQW1CQyxhQUFhQyxXQUFXLEtBQUssQ0FBRUYsQ0FBQUEsbUJBQW1CQyxhQUFhRSxVQUFVLEdBQUcsT0FBTztJQUM1RyxJQUFJLEVBQUVDLFNBQVNBLE9BQU8sRUFBRUMsWUFBWUEsVUFBVSxFQUFFLEdBQUdMLFFBQVFNLEtBQUs7SUFDaEUsSUFBSUMsWUFBWUgsWUFBWSxVQUFVQyxlQUFlLFlBQVlBLGVBQWU7SUFDaEYsSUFBSUUsV0FBVztRQUNYLE1BQU0sRUFBRUMsa0JBQWtCQSxnQkFBZ0IsRUFBRSxHQUFHUixRQUFRUyxhQUFhLENBQUNDLFdBQVc7UUFDaEYsSUFBSSxFQUFFTixTQUFTTyxlQUFlLEVBQUVOLFlBQVlPLGtCQUFrQixFQUFFLEdBQUdKLGlCQUFpQlI7UUFDcEZPLFlBQVlJLG9CQUFvQixVQUFVQyx1QkFBdUIsWUFBWUEsdUJBQXVCO0lBQ3hHO0lBQ0EsT0FBT0w7QUFDWDtBQUNBLFNBQVNNLHlDQUF5Q2IsT0FBTyxFQUFFYyxZQUFZO0lBQ25FLE9BQU8sQ0FBQ2QsUUFBUWUsWUFBWSxDQUFDLGFBQWEseUNBQXlDO0lBQ25GLENBQUNmLFFBQVFlLFlBQVksQ0FBQyxvQ0FBcUNmLENBQUFBLFFBQVFnQixRQUFRLEtBQUssYUFBYUYsZ0JBQWdCQSxhQUFhRSxRQUFRLEtBQUssWUFBWWhCLFFBQVFlLFlBQVksQ0FBQyxVQUFVLElBQUc7QUFDekw7QUFDQSxTQUFTRSwwQ0FBMENqQixPQUFPLEVBQUVjLFlBQVk7SUFDcEUsT0FBT2QsUUFBUWdCLFFBQVEsS0FBSyxjQUFjakIscUNBQXFDQyxZQUFZYSx5Q0FBeUNiLFNBQVNjLGlCQUFrQixFQUFDZCxRQUFRa0IsYUFBYSxJQUFJRCwwQ0FBMENqQixRQUFRa0IsYUFBYSxFQUFFbEIsUUFBTztBQUNyUTtBQUd1RSxDQUN2RSxtREFBbUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1kb2NzLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9AcmVhY3QtYXJpYStmb2N1c0AzLjE4LjNfcmVhY3RAMTguMy4xL25vZGVfbW9kdWxlcy9AcmVhY3QtYXJpYS9mb2N1cy9kaXN0L2lzRWxlbWVudFZpc2libGUubWpzP2JiY2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtnZXRPd25lcldpbmRvdyBhcyAkZGpoalckZ2V0T3duZXJXaW5kb3d9IGZyb20gXCJAcmVhY3QtYXJpYS91dGlsc1wiO1xuXG4vKlxuICogQ29weXJpZ2h0IDIwMjEgQWRvYmUuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBUaGlzIGZpbGUgaXMgbGljZW5zZWQgdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXkgb2J0YWluIGEgY29weVxuICogb2YgdGhlIExpY2Vuc2UgYXQgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlclxuICogdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgUkVQUkVTRU5UQVRJT05TXG4gKiBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2VcbiAqIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi8gXG5mdW5jdGlvbiAkNjQ1ZjJlNjdiODVhMjRjOSR2YXIkaXNTdHlsZVZpc2libGUoZWxlbWVudCkge1xuICAgIGNvbnN0IHdpbmRvd09iamVjdCA9ICgwLCAkZGpoalckZ2V0T3duZXJXaW5kb3cpKGVsZW1lbnQpO1xuICAgIGlmICghKGVsZW1lbnQgaW5zdGFuY2VvZiB3aW5kb3dPYmplY3QuSFRNTEVsZW1lbnQpICYmICEoZWxlbWVudCBpbnN0YW5jZW9mIHdpbmRvd09iamVjdC5TVkdFbGVtZW50KSkgcmV0dXJuIGZhbHNlO1xuICAgIGxldCB7IGRpc3BsYXk6IGRpc3BsYXksIHZpc2liaWxpdHk6IHZpc2liaWxpdHkgfSA9IGVsZW1lbnQuc3R5bGU7XG4gICAgbGV0IGlzVmlzaWJsZSA9IGRpc3BsYXkgIT09ICdub25lJyAmJiB2aXNpYmlsaXR5ICE9PSAnaGlkZGVuJyAmJiB2aXNpYmlsaXR5ICE9PSAnY29sbGFwc2UnO1xuICAgIGlmIChpc1Zpc2libGUpIHtcbiAgICAgICAgY29uc3QgeyBnZXRDb21wdXRlZFN0eWxlOiBnZXRDb21wdXRlZFN0eWxlIH0gPSBlbGVtZW50Lm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXc7XG4gICAgICAgIGxldCB7IGRpc3BsYXk6IGNvbXB1dGVkRGlzcGxheSwgdmlzaWJpbGl0eTogY29tcHV0ZWRWaXNpYmlsaXR5IH0gPSBnZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpO1xuICAgICAgICBpc1Zpc2libGUgPSBjb21wdXRlZERpc3BsYXkgIT09ICdub25lJyAmJiBjb21wdXRlZFZpc2liaWxpdHkgIT09ICdoaWRkZW4nICYmIGNvbXB1dGVkVmlzaWJpbGl0eSAhPT0gJ2NvbGxhcHNlJztcbiAgICB9XG4gICAgcmV0dXJuIGlzVmlzaWJsZTtcbn1cbmZ1bmN0aW9uICQ2NDVmMmU2N2I4NWEyNGM5JHZhciRpc0F0dHJpYnV0ZVZpc2libGUoZWxlbWVudCwgY2hpbGRFbGVtZW50KSB7XG4gICAgcmV0dXJuICFlbGVtZW50Lmhhc0F0dHJpYnV0ZSgnaGlkZGVuJykgJiYgLy8gSWdub3JlIEhpZGRlblNlbGVjdCB3aGVuIHRyZWUgd2Fsa2luZy5cbiAgICAhZWxlbWVudC5oYXNBdHRyaWJ1dGUoJ2RhdGEtcmVhY3QtYXJpYS1wcmV2ZW50LWZvY3VzJykgJiYgKGVsZW1lbnQubm9kZU5hbWUgPT09ICdERVRBSUxTJyAmJiBjaGlsZEVsZW1lbnQgJiYgY2hpbGRFbGVtZW50Lm5vZGVOYW1lICE9PSAnU1VNTUFSWScgPyBlbGVtZW50Lmhhc0F0dHJpYnV0ZSgnb3BlbicpIDogdHJ1ZSk7XG59XG5mdW5jdGlvbiAkNjQ1ZjJlNjdiODVhMjRjOSRleHBvcnQkZTk4OWMwZmZmYWE2YjI3YShlbGVtZW50LCBjaGlsZEVsZW1lbnQpIHtcbiAgICByZXR1cm4gZWxlbWVudC5ub2RlTmFtZSAhPT0gJyNjb21tZW50JyAmJiAkNjQ1ZjJlNjdiODVhMjRjOSR2YXIkaXNTdHlsZVZpc2libGUoZWxlbWVudCkgJiYgJDY0NWYyZTY3Yjg1YTI0YzkkdmFyJGlzQXR0cmlidXRlVmlzaWJsZShlbGVtZW50LCBjaGlsZEVsZW1lbnQpICYmICghZWxlbWVudC5wYXJlbnRFbGVtZW50IHx8ICQ2NDVmMmU2N2I4NWEyNGM5JGV4cG9ydCRlOTg5YzBmZmZhYTZiMjdhKGVsZW1lbnQucGFyZW50RWxlbWVudCwgZWxlbWVudCkpO1xufVxuXG5cbmV4cG9ydCB7JDY0NWYyZTY3Yjg1YTI0YzkkZXhwb3J0JGU5ODljMGZmZmFhNmIyN2EgYXMgaXNFbGVtZW50VmlzaWJsZX07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pc0VsZW1lbnRWaXNpYmxlLm1vZHVsZS5qcy5tYXBcbiJdLCJuYW1lcyI6WyJnZXRPd25lcldpbmRvdyIsIiRkamhqVyRnZXRPd25lcldpbmRvdyIsIiQ2NDVmMmU2N2I4NWEyNGM5JHZhciRpc1N0eWxlVmlzaWJsZSIsImVsZW1lbnQiLCJ3aW5kb3dPYmplY3QiLCJIVE1MRWxlbWVudCIsIlNWR0VsZW1lbnQiLCJkaXNwbGF5IiwidmlzaWJpbGl0eSIsInN0eWxlIiwiaXNWaXNpYmxlIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsIm93bmVyRG9jdW1lbnQiLCJkZWZhdWx0VmlldyIsImNvbXB1dGVkRGlzcGxheSIsImNvbXB1dGVkVmlzaWJpbGl0eSIsIiQ2NDVmMmU2N2I4NWEyNGM5JHZhciRpc0F0dHJpYnV0ZVZpc2libGUiLCJjaGlsZEVsZW1lbnQiLCJoYXNBdHRyaWJ1dGUiLCJub2RlTmFtZSIsIiQ2NDVmMmU2N2I4NWEyNGM5JGV4cG9ydCRlOTg5YzBmZmZhYTZiMjdhIiwicGFyZW50RWxlbWVudCIsImlzRWxlbWVudFZpc2libGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/.pnpm/@react-aria+focus@3.18.3_react@18.3.1/node_modules/@react-aria/focus/dist/isElementVisible.mjs\n");

/***/ }),

/***/ "(ssr)/../node_modules/.pnpm/@react-aria+focus@3.18.3_react@18.3.1/node_modules/@react-aria/focus/dist/useFocusable.mjs":
/*!************************************************************************************************************************!*\
  !*** ../node_modules/.pnpm/@react-aria+focus@3.18.3_react@18.3.1/node_modules/@react-aria/focus/dist/useFocusable.mjs ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FocusableProvider: () => (/* binding */ $e6afbd83fe6ebbd2$export$13f3202a3e5ddd5),\n/* harmony export */   useFocusable: () => (/* binding */ $e6afbd83fe6ebbd2$export$4c014de7c8940b4c)\n/* harmony export */ });\n/* harmony import */ var _focusSafely_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./focusSafely.mjs */ \"(ssr)/../node_modules/.pnpm/@react-aria+focus@3.18.3_react@18.3.1/node_modules/@react-aria/focus/dist/focusSafely.mjs\");\n/* harmony import */ var _react_aria_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @react-aria/utils */ \"(ssr)/../node_modules/.pnpm/@react-aria+utils@3.25.3_react@18.3.1/node_modules/@react-aria/utils/dist/useSyncRef.mjs\");\n/* harmony import */ var _react_aria_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-aria/utils */ \"(ssr)/../node_modules/.pnpm/@react-aria+utils@3.25.3_react@18.3.1/node_modules/@react-aria/utils/dist/useObjectRef.mjs\");\n/* harmony import */ var _react_aria_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @react-aria/utils */ \"(ssr)/../node_modules/.pnpm/@react-aria+utils@3.25.3_react@18.3.1/node_modules/@react-aria/utils/dist/mergeProps.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/../node_modules/.pnpm/next@14.0.3_@babel+core@7.25.7_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _react_aria_interactions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @react-aria/interactions */ \"(ssr)/../node_modules/.pnpm/@react-aria+interactions@3.22.3_react@18.3.1/node_modules/@react-aria/interactions/dist/useFocus.mjs\");\n/* harmony import */ var _react_aria_interactions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @react-aria/interactions */ \"(ssr)/../node_modules/.pnpm/@react-aria+interactions@3.22.3_react@18.3.1/node_modules/@react-aria/interactions/dist/useKeyboard.mjs\");\n\n\n\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ let $e6afbd83fe6ebbd2$var$FocusableContext = /*#__PURE__*/ (0, (react__WEBPACK_IMPORTED_MODULE_0___default())).createContext(null);\nfunction $e6afbd83fe6ebbd2$var$useFocusableContext(ref) {\n    let context = (0, react__WEBPACK_IMPORTED_MODULE_0__.useContext)($e6afbd83fe6ebbd2$var$FocusableContext) || {};\n    (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_1__.useSyncRef)(context, ref);\n    // eslint-disable-next-line\n    let { ref: _, ...otherProps } = context;\n    return otherProps;\n}\n/**\n * Provides DOM props to the nearest focusable child.\n */ function $e6afbd83fe6ebbd2$var$FocusableProvider(props, ref) {\n    let { children: children, ...otherProps } = props;\n    let objRef = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.useObjectRef)(ref);\n    let context = {\n        ...otherProps,\n        ref: objRef\n    };\n    return /*#__PURE__*/ (0, (react__WEBPACK_IMPORTED_MODULE_0___default())).createElement($e6afbd83fe6ebbd2$var$FocusableContext.Provider, {\n        value: context\n    }, children);\n}\nlet $e6afbd83fe6ebbd2$export$13f3202a3e5ddd5 = /*#__PURE__*/ (0, (react__WEBPACK_IMPORTED_MODULE_0___default())).forwardRef($e6afbd83fe6ebbd2$var$FocusableProvider);\nfunction $e6afbd83fe6ebbd2$export$4c014de7c8940b4c(props, domRef) {\n    let { focusProps: focusProps } = (0, _react_aria_interactions__WEBPACK_IMPORTED_MODULE_3__.useFocus)(props);\n    let { keyboardProps: keyboardProps } = (0, _react_aria_interactions__WEBPACK_IMPORTED_MODULE_4__.useKeyboard)(props);\n    let interactions = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_5__.mergeProps)(focusProps, keyboardProps);\n    let domProps = $e6afbd83fe6ebbd2$var$useFocusableContext(domRef);\n    let interactionProps = props.isDisabled ? {} : domProps;\n    let autoFocusRef = (0, react__WEBPACK_IMPORTED_MODULE_0__.useRef)(props.autoFocus);\n    (0, react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (autoFocusRef.current && domRef.current) (0, _focusSafely_mjs__WEBPACK_IMPORTED_MODULE_6__.focusSafely)(domRef.current);\n        autoFocusRef.current = false;\n    }, [\n        domRef\n    ]);\n    return {\n        focusableProps: (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_5__.mergeProps)({\n            ...interactions,\n            tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : undefined\n        }, interactionProps)\n    };\n}\n //# sourceMappingURL=useFocusable.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0ByZWFjdC1hcmlhK2ZvY3VzQDMuMTguM19yZWFjdEAxOC4zLjEvbm9kZV9tb2R1bGVzL0ByZWFjdC1hcmlhL2ZvY3VzL2Rpc3QvdXNlRm9jdXNhYmxlLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQTJGO0FBQzZDO0FBQ1o7QUFDcEI7QUFFeEc7Ozs7Ozs7Ozs7Q0FVQyxHQUlELElBQUltQix5Q0FBdUQsV0FBSCxHQUFJLElBQUdYLDhDQUFXLEVBQUdZLGFBQWEsQ0FBQztBQUMzRixTQUFTQywwQ0FBMENDLEdBQUc7SUFDbEQsSUFBSUMsVUFBVSxDQUFDLEdBQUdiLDZDQUFnQixFQUFHUywyQ0FBMkMsQ0FBQztJQUNoRixJQUFHaEIseURBQWdCLEVBQUdvQixTQUFTRDtJQUNoQywyQkFBMkI7SUFDM0IsSUFBSSxFQUFFQSxLQUFLRSxDQUFDLEVBQUUsR0FBR0MsWUFBWSxHQUFHRjtJQUNoQyxPQUFPRTtBQUNYO0FBQ0E7O0NBRUMsR0FBRyxTQUFTQyx3Q0FBd0NDLEtBQUssRUFBRUwsR0FBRztJQUMzRCxJQUFJLEVBQUVNLFVBQVVBLFFBQVEsRUFBRSxHQUFHSCxZQUFZLEdBQUdFO0lBQzVDLElBQUlFLFNBQVMsQ0FBQyxHQUFHeEIsMkRBQWtCLEVBQUdpQjtJQUN0QyxJQUFJQyxVQUFVO1FBQ1YsR0FBR0UsVUFBVTtRQUNiSCxLQUFLTztJQUNUO0lBQ0EsT0FBcUIsV0FBSCxHQUFJLElBQUdyQiw4Q0FBVyxFQUFHc0IsYUFBYSxDQUFDWCx1Q0FBdUNZLFFBQVEsRUFBRTtRQUNsR0MsT0FBT1Q7SUFDWCxHQUFHSztBQUNQO0FBQ0EsSUFBSUssMkNBQXlELFdBQUgsR0FBSSxJQUFHekIsOENBQVcsRUFBRzBCLFVBQVUsQ0FBQ1I7QUFDMUYsU0FBU1MsMENBQTBDUixLQUFLLEVBQUVTLE1BQU07SUFDNUQsSUFBSSxFQUFFQyxZQUFZQSxVQUFVLEVBQUUsR0FBRyxDQUFDLEdBQUdyQiw4REFBYyxFQUFHVztJQUN0RCxJQUFJLEVBQUVXLGVBQWVBLGFBQWEsRUFBRSxHQUFHLENBQUMsR0FBR3BCLGlFQUFpQixFQUFHUztJQUMvRCxJQUFJWSxlQUFlLENBQUMsR0FBR2hDLHlEQUFnQixFQUFHOEIsWUFBWUM7SUFDdEQsSUFBSUUsV0FBV25CLDBDQUEwQ2U7SUFDekQsSUFBSUssbUJBQW1CZCxNQUFNZSxVQUFVLEdBQUcsQ0FBQyxJQUFJRjtJQUMvQyxJQUFJRyxlQUFlLENBQUMsR0FBRy9CLHlDQUFZLEVBQUdlLE1BQU1pQixTQUFTO0lBQ3BELElBQUc5Qiw0Q0FBZSxFQUFHO1FBQ2xCLElBQUk2QixhQUFhRSxPQUFPLElBQUlULE9BQU9TLE9BQU8sRUFBRSxDQUFDLEdBQUc1Qyx5REFBd0MsRUFBR21DLE9BQU9TLE9BQU87UUFDekdGLGFBQWFFLE9BQU8sR0FBRztJQUMzQixHQUFHO1FBQ0NUO0tBQ0g7SUFDRCxPQUFPO1FBQ0hVLGdCQUFnQixDQUFDLEdBQUd2Qyx5REFBZ0IsRUFBRztZQUNuQyxHQUFHZ0MsWUFBWTtZQUNmUSxVQUFVcEIsTUFBTXFCLG1CQUFtQixJQUFJLENBQUNyQixNQUFNZSxVQUFVLEdBQUcsQ0FBQyxJQUFJTztRQUNwRSxHQUFHUjtJQUNQO0FBQ0o7QUFHa0ksQ0FDbEksK0NBQStDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtZG9jcy8uLi9ub2RlX21vZHVsZXMvLnBucG0vQHJlYWN0LWFyaWErZm9jdXNAMy4xOC4zX3JlYWN0QDE4LjMuMS9ub2RlX21vZHVsZXMvQHJlYWN0LWFyaWEvZm9jdXMvZGlzdC91c2VGb2N1c2FibGUubWpzPzhiOWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtmb2N1c1NhZmVseSBhcyAkNmE5OTE5NTMzMmVkZWM4YiRleHBvcnQkODBmM2UxNDdkNzgxNTcxY30gZnJvbSBcIi4vZm9jdXNTYWZlbHkubWpzXCI7XG5pbXBvcnQge3VzZVN5bmNSZWYgYXMgJGg4eHNvJHVzZVN5bmNSZWYsIHVzZU9iamVjdFJlZiBhcyAkaDh4c28kdXNlT2JqZWN0UmVmLCBtZXJnZVByb3BzIGFzICRoOHhzbyRtZXJnZVByb3BzfSBmcm9tIFwiQHJlYWN0LWFyaWEvdXRpbHNcIjtcbmltcG9ydCAkaDh4c28kcmVhY3QsIHt1c2VDb250ZXh0IGFzICRoOHhzbyR1c2VDb250ZXh0LCB1c2VSZWYgYXMgJGg4eHNvJHVzZVJlZiwgdXNlRWZmZWN0IGFzICRoOHhzbyR1c2VFZmZlY3R9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHt1c2VGb2N1cyBhcyAkaDh4c28kdXNlRm9jdXMsIHVzZUtleWJvYXJkIGFzICRoOHhzbyR1c2VLZXlib2FyZH0gZnJvbSBcIkByZWFjdC1hcmlhL2ludGVyYWN0aW9uc1wiO1xuXG4vKlxuICogQ29weXJpZ2h0IDIwMjAgQWRvYmUuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBUaGlzIGZpbGUgaXMgbGljZW5zZWQgdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXkgb2J0YWluIGEgY29weVxuICogb2YgdGhlIExpY2Vuc2UgYXQgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlclxuICogdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgUkVQUkVTRU5UQVRJT05TXG4gKiBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2VcbiAqIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi8gXG5cblxuXG5sZXQgJGU2YWZiZDgzZmU2ZWJiZDIkdmFyJEZvY3VzYWJsZUNvbnRleHQgPSAvKiNfX1BVUkVfXyovICgwLCAkaDh4c28kcmVhY3QpLmNyZWF0ZUNvbnRleHQobnVsbCk7XG5mdW5jdGlvbiAkZTZhZmJkODNmZTZlYmJkMiR2YXIkdXNlRm9jdXNhYmxlQ29udGV4dChyZWYpIHtcbiAgICBsZXQgY29udGV4dCA9ICgwLCAkaDh4c28kdXNlQ29udGV4dCkoJGU2YWZiZDgzZmU2ZWJiZDIkdmFyJEZvY3VzYWJsZUNvbnRleHQpIHx8IHt9O1xuICAgICgwLCAkaDh4c28kdXNlU3luY1JlZikoY29udGV4dCwgcmVmKTtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgICBsZXQgeyByZWY6IF8sIC4uLm90aGVyUHJvcHMgfSA9IGNvbnRleHQ7XG4gICAgcmV0dXJuIG90aGVyUHJvcHM7XG59XG4vKipcbiAqIFByb3ZpZGVzIERPTSBwcm9wcyB0byB0aGUgbmVhcmVzdCBmb2N1c2FibGUgY2hpbGQuXG4gKi8gZnVuY3Rpb24gJGU2YWZiZDgzZmU2ZWJiZDIkdmFyJEZvY3VzYWJsZVByb3ZpZGVyKHByb3BzLCByZWYpIHtcbiAgICBsZXQgeyBjaGlsZHJlbjogY2hpbGRyZW4sIC4uLm90aGVyUHJvcHMgfSA9IHByb3BzO1xuICAgIGxldCBvYmpSZWYgPSAoMCwgJGg4eHNvJHVzZU9iamVjdFJlZikocmVmKTtcbiAgICBsZXQgY29udGV4dCA9IHtcbiAgICAgICAgLi4ub3RoZXJQcm9wcyxcbiAgICAgICAgcmVmOiBvYmpSZWZcbiAgICB9O1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovICgwLCAkaDh4c28kcmVhY3QpLmNyZWF0ZUVsZW1lbnQoJGU2YWZiZDgzZmU2ZWJiZDIkdmFyJEZvY3VzYWJsZUNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgICAgdmFsdWU6IGNvbnRleHRcbiAgICB9LCBjaGlsZHJlbik7XG59XG5sZXQgJGU2YWZiZDgzZmU2ZWJiZDIkZXhwb3J0JDEzZjMyMDJhM2U1ZGRkNSA9IC8qI19fUFVSRV9fKi8gKDAsICRoOHhzbyRyZWFjdCkuZm9yd2FyZFJlZigkZTZhZmJkODNmZTZlYmJkMiR2YXIkRm9jdXNhYmxlUHJvdmlkZXIpO1xuZnVuY3Rpb24gJGU2YWZiZDgzZmU2ZWJiZDIkZXhwb3J0JDRjMDE0ZGU3Yzg5NDBiNGMocHJvcHMsIGRvbVJlZikge1xuICAgIGxldCB7IGZvY3VzUHJvcHM6IGZvY3VzUHJvcHMgfSA9ICgwLCAkaDh4c28kdXNlRm9jdXMpKHByb3BzKTtcbiAgICBsZXQgeyBrZXlib2FyZFByb3BzOiBrZXlib2FyZFByb3BzIH0gPSAoMCwgJGg4eHNvJHVzZUtleWJvYXJkKShwcm9wcyk7XG4gICAgbGV0IGludGVyYWN0aW9ucyA9ICgwLCAkaDh4c28kbWVyZ2VQcm9wcykoZm9jdXNQcm9wcywga2V5Ym9hcmRQcm9wcyk7XG4gICAgbGV0IGRvbVByb3BzID0gJGU2YWZiZDgzZmU2ZWJiZDIkdmFyJHVzZUZvY3VzYWJsZUNvbnRleHQoZG9tUmVmKTtcbiAgICBsZXQgaW50ZXJhY3Rpb25Qcm9wcyA9IHByb3BzLmlzRGlzYWJsZWQgPyB7fSA6IGRvbVByb3BzO1xuICAgIGxldCBhdXRvRm9jdXNSZWYgPSAoMCwgJGg4eHNvJHVzZVJlZikocHJvcHMuYXV0b0ZvY3VzKTtcbiAgICAoMCwgJGg4eHNvJHVzZUVmZmVjdCkoKCk9PntcbiAgICAgICAgaWYgKGF1dG9Gb2N1c1JlZi5jdXJyZW50ICYmIGRvbVJlZi5jdXJyZW50KSAoMCwgJDZhOTkxOTUzMzJlZGVjOGIkZXhwb3J0JDgwZjNlMTQ3ZDc4MTU3MWMpKGRvbVJlZi5jdXJyZW50KTtcbiAgICAgICAgYXV0b0ZvY3VzUmVmLmN1cnJlbnQgPSBmYWxzZTtcbiAgICB9LCBbXG4gICAgICAgIGRvbVJlZlxuICAgIF0pO1xuICAgIHJldHVybiB7XG4gICAgICAgIGZvY3VzYWJsZVByb3BzOiAoMCwgJGg4eHNvJG1lcmdlUHJvcHMpKHtcbiAgICAgICAgICAgIC4uLmludGVyYWN0aW9ucyxcbiAgICAgICAgICAgIHRhYkluZGV4OiBwcm9wcy5leGNsdWRlRnJvbVRhYk9yZGVyICYmICFwcm9wcy5pc0Rpc2FibGVkID8gLTEgOiB1bmRlZmluZWRcbiAgICAgICAgfSwgaW50ZXJhY3Rpb25Qcm9wcylcbiAgICB9O1xufVxuXG5cbmV4cG9ydCB7JGU2YWZiZDgzZmU2ZWJiZDIkZXhwb3J0JDEzZjMyMDJhM2U1ZGRkNSBhcyBGb2N1c2FibGVQcm92aWRlciwgJGU2YWZiZDgzZmU2ZWJiZDIkZXhwb3J0JDRjMDE0ZGU3Yzg5NDBiNGMgYXMgdXNlRm9jdXNhYmxlfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZUZvY3VzYWJsZS5tb2R1bGUuanMubWFwXG4iXSwibmFtZXMiOlsiZm9jdXNTYWZlbHkiLCIkNmE5OTE5NTMzMmVkZWM4YiRleHBvcnQkODBmM2UxNDdkNzgxNTcxYyIsInVzZVN5bmNSZWYiLCIkaDh4c28kdXNlU3luY1JlZiIsInVzZU9iamVjdFJlZiIsIiRoOHhzbyR1c2VPYmplY3RSZWYiLCJtZXJnZVByb3BzIiwiJGg4eHNvJG1lcmdlUHJvcHMiLCIkaDh4c28kcmVhY3QiLCJ1c2VDb250ZXh0IiwiJGg4eHNvJHVzZUNvbnRleHQiLCJ1c2VSZWYiLCIkaDh4c28kdXNlUmVmIiwidXNlRWZmZWN0IiwiJGg4eHNvJHVzZUVmZmVjdCIsInVzZUZvY3VzIiwiJGg4eHNvJHVzZUZvY3VzIiwidXNlS2V5Ym9hcmQiLCIkaDh4c28kdXNlS2V5Ym9hcmQiLCIkZTZhZmJkODNmZTZlYmJkMiR2YXIkRm9jdXNhYmxlQ29udGV4dCIsImNyZWF0ZUNvbnRleHQiLCIkZTZhZmJkODNmZTZlYmJkMiR2YXIkdXNlRm9jdXNhYmxlQ29udGV4dCIsInJlZiIsImNvbnRleHQiLCJfIiwib3RoZXJQcm9wcyIsIiRlNmFmYmQ4M2ZlNmViYmQyJHZhciRGb2N1c2FibGVQcm92aWRlciIsInByb3BzIiwiY2hpbGRyZW4iLCJvYmpSZWYiLCJjcmVhdGVFbGVtZW50IiwiUHJvdmlkZXIiLCJ2YWx1ZSIsIiRlNmFmYmQ4M2ZlNmViYmQyJGV4cG9ydCQxM2YzMjAyYTNlNWRkZDUiLCJmb3J3YXJkUmVmIiwiJGU2YWZiZDgzZmU2ZWJiZDIkZXhwb3J0JDRjMDE0ZGU3Yzg5NDBiNGMiLCJkb21SZWYiLCJmb2N1c1Byb3BzIiwia2V5Ym9hcmRQcm9wcyIsImludGVyYWN0aW9ucyIsImRvbVByb3BzIiwiaW50ZXJhY3Rpb25Qcm9wcyIsImlzRGlzYWJsZWQiLCJhdXRvRm9jdXNSZWYiLCJhdXRvRm9jdXMiLCJjdXJyZW50IiwiZm9jdXNhYmxlUHJvcHMiLCJ0YWJJbmRleCIsImV4Y2x1ZGVGcm9tVGFiT3JkZXIiLCJ1bmRlZmluZWQiLCJGb2N1c2FibGVQcm92aWRlciIsInVzZUZvY3VzYWJsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/.pnpm/@react-aria+focus@3.18.3_react@18.3.1/node_modules/@react-aria/focus/dist/useFocusable.mjs\n");

/***/ }),

/***/ "(ssr)/../node_modules/.pnpm/@react-aria+focus@3.18.3_react@18.3.1/node_modules/@react-aria/focus/dist/useHasTabbableChild.mjs":
/*!*******************************************************************************************************************************!*\
  !*** ../node_modules/.pnpm/@react-aria+focus@3.18.3_react@18.3.1/node_modules/@react-aria/focus/dist/useHasTabbableChild.mjs ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useHasTabbableChild: () => (/* binding */ $83013635b024ae3d$export$eac1895992b9f3d6)\n/* harmony export */ });\n/* harmony import */ var _FocusScope_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FocusScope.mjs */ \"(ssr)/../node_modules/.pnpm/@react-aria+focus@3.18.3_react@18.3.1/node_modules/@react-aria/focus/dist/FocusScope.mjs\");\n/* harmony import */ var _react_aria_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @react-aria/utils */ \"(ssr)/../node_modules/.pnpm/@react-aria+utils@3.25.3_react@18.3.1/node_modules/@react-aria/utils/dist/useLayoutEffect.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/../node_modules/.pnpm/next@14.0.3_@babel+core@7.25.7_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ function $83013635b024ae3d$export$eac1895992b9f3d6(ref, options) {\n    let isDisabled = options === null || options === void 0 ? void 0 : options.isDisabled;\n    let [hasTabbableChild, setHasTabbableChild] = (0, react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(()=>{\n        if ((ref === null || ref === void 0 ? void 0 : ref.current) && !isDisabled) {\n            let update = ()=>{\n                if (ref.current) {\n                    let walker = (0, _FocusScope_mjs__WEBPACK_IMPORTED_MODULE_2__.getFocusableTreeWalker)(ref.current, {\n                        tabbable: true\n                    });\n                    setHasTabbableChild(!!walker.nextNode());\n                }\n            };\n            update();\n            // Update when new elements are inserted, or the tabIndex/disabled attribute updates.\n            let observer = new MutationObserver(update);\n            observer.observe(ref.current, {\n                subtree: true,\n                childList: true,\n                attributes: true,\n                attributeFilter: [\n                    \"tabIndex\",\n                    \"disabled\"\n                ]\n            });\n            return ()=>{\n                // Disconnect mutation observer when a React update occurs on the top-level component\n                // so we update synchronously after re-rendering. Otherwise React will emit act warnings\n                // in tests since mutation observers fire asynchronously. The mutation observer is necessary\n                // so we also update if a child component re-renders and adds/removes something tabbable.\n                observer.disconnect();\n            };\n        }\n    });\n    return isDisabled ? false : hasTabbableChild;\n}\n //# sourceMappingURL=useHasTabbableChild.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0ByZWFjdC1hcmlhK2ZvY3VzQDMuMTguM19yZWFjdEAxOC4zLjEvbm9kZV9tb2R1bGVzL0ByZWFjdC1hcmlhL2ZvY3VzL2Rpc3QvdXNlSGFzVGFiYmFibGVDaGlsZC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBcUc7QUFDekI7QUFDMUI7QUFFbEQ7Ozs7Ozs7Ozs7Q0FVQyxHQUdELFNBQVNNLDBDQUEwQ0MsR0FBRyxFQUFFQyxPQUFPO0lBQzNELElBQUlDLGFBQWFELFlBQVksUUFBUUEsWUFBWSxLQUFLLElBQUksS0FBSyxJQUFJQSxRQUFRQyxVQUFVO0lBQ3JGLElBQUksQ0FBQ0Msa0JBQWtCQyxvQkFBb0IsR0FBRyxDQUFDLEdBQUdOLDJDQUFjLEVBQUc7SUFDbEUsSUFBR0YsOERBQXFCLEVBQUc7UUFDeEIsSUFBSSxDQUFDSSxRQUFRLFFBQVFBLFFBQVEsS0FBSyxJQUFJLEtBQUssSUFBSUEsSUFBSUssT0FBTyxLQUFLLENBQUNILFlBQVk7WUFDeEUsSUFBSUksU0FBUztnQkFDVCxJQUFJTixJQUFJSyxPQUFPLEVBQUU7b0JBQ2IsSUFBSUUsU0FBUyxDQUFDLEdBQUdiLG1FQUF3QyxFQUFHTSxJQUFJSyxPQUFPLEVBQUU7d0JBQ3JFRyxVQUFVO29CQUNkO29CQUNBSixvQkFBb0IsQ0FBQyxDQUFDRyxPQUFPRSxRQUFRO2dCQUN6QztZQUNKO1lBQ0FIO1lBQ0EscUZBQXFGO1lBQ3JGLElBQUlJLFdBQVcsSUFBSUMsaUJBQWlCTDtZQUNwQ0ksU0FBU0UsT0FBTyxDQUFDWixJQUFJSyxPQUFPLEVBQUU7Z0JBQzFCUSxTQUFTO2dCQUNUQyxXQUFXO2dCQUNYQyxZQUFZO2dCQUNaQyxpQkFBaUI7b0JBQ2I7b0JBQ0E7aUJBQ0g7WUFDTDtZQUNBLE9BQU87Z0JBQ0gscUZBQXFGO2dCQUNyRix3RkFBd0Y7Z0JBQ3hGLDRGQUE0RjtnQkFDNUYseUZBQXlGO2dCQUN6Rk4sU0FBU08sVUFBVTtZQUN2QjtRQUNKO0lBQ0o7SUFDQSxPQUFPZixhQUFhLFFBQVFDO0FBQ2hDO0FBRzBFLENBQzFFLHNEQUFzRCIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LWRvY3MvLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0ByZWFjdC1hcmlhK2ZvY3VzQDMuMTguM19yZWFjdEAxOC4zLjEvbm9kZV9tb2R1bGVzL0ByZWFjdC1hcmlhL2ZvY3VzL2Rpc3QvdXNlSGFzVGFiYmFibGVDaGlsZC5tanM/NWIyMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2dldEZvY3VzYWJsZVRyZWVXYWxrZXIgYXMgJDliZjcxZWEyODc5M2U3MzgkZXhwb3J0JDJkNmVjOGZjMzc1Y2VhZmF9IGZyb20gXCIuL0ZvY3VzU2NvcGUubWpzXCI7XG5pbXBvcnQge3VzZUxheW91dEVmZmVjdCBhcyAkaEdBYUckdXNlTGF5b3V0RWZmZWN0fSBmcm9tIFwiQHJlYWN0LWFyaWEvdXRpbHNcIjtcbmltcG9ydCB7dXNlU3RhdGUgYXMgJGhHQWFHJHVzZVN0YXRlfSBmcm9tIFwicmVhY3RcIjtcblxuLypcbiAqIENvcHlyaWdodCAyMDIyIEFkb2JlLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogVGhpcyBmaWxlIGlzIGxpY2Vuc2VkIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5IG9idGFpbiBhIGNvcHlcbiAqIG9mIHRoZSBMaWNlbnNlIGF0IGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXJcbiAqIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIFJFUFJFU0VOVEFUSU9OU1xuICogT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlXG4gKiBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovIFxuXG5cbmZ1bmN0aW9uICQ4MzAxMzYzNWIwMjRhZTNkJGV4cG9ydCRlYWMxODk1OTkyYjlmM2Q2KHJlZiwgb3B0aW9ucykge1xuICAgIGxldCBpc0Rpc2FibGVkID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmlzRGlzYWJsZWQ7XG4gICAgbGV0IFtoYXNUYWJiYWJsZUNoaWxkLCBzZXRIYXNUYWJiYWJsZUNoaWxkXSA9ICgwLCAkaEdBYUckdXNlU3RhdGUpKGZhbHNlKTtcbiAgICAoMCwgJGhHQWFHJHVzZUxheW91dEVmZmVjdCkoKCk9PntcbiAgICAgICAgaWYgKChyZWYgPT09IG51bGwgfHwgcmVmID09PSB2b2lkIDAgPyB2b2lkIDAgOiByZWYuY3VycmVudCkgJiYgIWlzRGlzYWJsZWQpIHtcbiAgICAgICAgICAgIGxldCB1cGRhdGUgPSAoKT0+e1xuICAgICAgICAgICAgICAgIGlmIChyZWYuY3VycmVudCkge1xuICAgICAgICAgICAgICAgICAgICBsZXQgd2Fsa2VyID0gKDAsICQ5YmY3MWVhMjg3OTNlNzM4JGV4cG9ydCQyZDZlYzhmYzM3NWNlYWZhKShyZWYuY3VycmVudCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGFiYmFibGU6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHNldEhhc1RhYmJhYmxlQ2hpbGQoISF3YWxrZXIubmV4dE5vZGUoKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHVwZGF0ZSgpO1xuICAgICAgICAgICAgLy8gVXBkYXRlIHdoZW4gbmV3IGVsZW1lbnRzIGFyZSBpbnNlcnRlZCwgb3IgdGhlIHRhYkluZGV4L2Rpc2FibGVkIGF0dHJpYnV0ZSB1cGRhdGVzLlxuICAgICAgICAgICAgbGV0IG9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIodXBkYXRlKTtcbiAgICAgICAgICAgIG9ic2VydmVyLm9ic2VydmUocmVmLmN1cnJlbnQsIHtcbiAgICAgICAgICAgICAgICBzdWJ0cmVlOiB0cnVlLFxuICAgICAgICAgICAgICAgIGNoaWxkTGlzdDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiB0cnVlLFxuICAgICAgICAgICAgICAgIGF0dHJpYnV0ZUZpbHRlcjogW1xuICAgICAgICAgICAgICAgICAgICAndGFiSW5kZXgnLFxuICAgICAgICAgICAgICAgICAgICAnZGlzYWJsZWQnXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gKCk9PntcbiAgICAgICAgICAgICAgICAvLyBEaXNjb25uZWN0IG11dGF0aW9uIG9ic2VydmVyIHdoZW4gYSBSZWFjdCB1cGRhdGUgb2NjdXJzIG9uIHRoZSB0b3AtbGV2ZWwgY29tcG9uZW50XG4gICAgICAgICAgICAgICAgLy8gc28gd2UgdXBkYXRlIHN5bmNocm9ub3VzbHkgYWZ0ZXIgcmUtcmVuZGVyaW5nLiBPdGhlcndpc2UgUmVhY3Qgd2lsbCBlbWl0IGFjdCB3YXJuaW5nc1xuICAgICAgICAgICAgICAgIC8vIGluIHRlc3RzIHNpbmNlIG11dGF0aW9uIG9ic2VydmVycyBmaXJlIGFzeW5jaHJvbm91c2x5LiBUaGUgbXV0YXRpb24gb2JzZXJ2ZXIgaXMgbmVjZXNzYXJ5XG4gICAgICAgICAgICAgICAgLy8gc28gd2UgYWxzbyB1cGRhdGUgaWYgYSBjaGlsZCBjb21wb25lbnQgcmUtcmVuZGVycyBhbmQgYWRkcy9yZW1vdmVzIHNvbWV0aGluZyB0YWJiYWJsZS5cbiAgICAgICAgICAgICAgICBvYnNlcnZlci5kaXNjb25uZWN0KCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIGlzRGlzYWJsZWQgPyBmYWxzZSA6IGhhc1RhYmJhYmxlQ2hpbGQ7XG59XG5cblxuZXhwb3J0IHskODMwMTM2MzViMDI0YWUzZCRleHBvcnQkZWFjMTg5NTk5MmI5ZjNkNiBhcyB1c2VIYXNUYWJiYWJsZUNoaWxkfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZUhhc1RhYmJhYmxlQ2hpbGQubW9kdWxlLmpzLm1hcFxuIl0sIm5hbWVzIjpbImdldEZvY3VzYWJsZVRyZWVXYWxrZXIiLCIkOWJmNzFlYTI4NzkzZTczOCRleHBvcnQkMmQ2ZWM4ZmMzNzVjZWFmYSIsInVzZUxheW91dEVmZmVjdCIsIiRoR0FhRyR1c2VMYXlvdXRFZmZlY3QiLCJ1c2VTdGF0ZSIsIiRoR0FhRyR1c2VTdGF0ZSIsIiQ4MzAxMzYzNWIwMjRhZTNkJGV4cG9ydCRlYWMxODk1OTkyYjlmM2Q2IiwicmVmIiwib3B0aW9ucyIsImlzRGlzYWJsZWQiLCJoYXNUYWJiYWJsZUNoaWxkIiwic2V0SGFzVGFiYmFibGVDaGlsZCIsImN1cnJlbnQiLCJ1cGRhdGUiLCJ3YWxrZXIiLCJ0YWJiYWJsZSIsIm5leHROb2RlIiwib2JzZXJ2ZXIiLCJNdXRhdGlvbk9ic2VydmVyIiwib2JzZXJ2ZSIsInN1YnRyZWUiLCJjaGlsZExpc3QiLCJhdHRyaWJ1dGVzIiwiYXR0cmlidXRlRmlsdGVyIiwiZGlzY29ubmVjdCIsInVzZUhhc1RhYmJhYmxlQ2hpbGQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/.pnpm/@react-aria+focus@3.18.3_react@18.3.1/node_modules/@react-aria/focus/dist/useHasTabbableChild.mjs\n");

/***/ })

};
;