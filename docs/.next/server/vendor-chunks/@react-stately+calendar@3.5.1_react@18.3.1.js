"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@react-stately+calendar@3.5.1_react@18.3.1";
exports.ids = ["vendor-chunks/@react-stately+calendar@3.5.1_react@18.3.1"];
exports.modules = {

/***/ "(ssr)/../node_modules/.pnpm/@react-stately+calendar@3.5.1_react@18.3.1/node_modules/@react-stately/calendar/dist/useCalendarState.mjs":
/*!***************************************************************************************************************************************!*\
  !*** ../node_modules/.pnpm/@react-stately+calendar@3.5.1_react@18.3.1/node_modules/@react-stately/calendar/dist/useCalendarState.mjs ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useCalendarState: () => (/* binding */ $131cf43a05231e1e$export$6d095e787d2b5e1f)\n/* harmony export */ });\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils.mjs */ \"(ssr)/../node_modules/.pnpm/@react-stately+calendar@3.5.1_react@18.3.1/node_modules/@react-stately/calendar/dist/utils.mjs\");\n/* harmony import */ var _internationalized_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @internationalized/date */ \"(ssr)/../node_modules/.pnpm/@internationalized+date@3.5.6/node_modules/@internationalized/date/dist/DateFormatter.mjs\");\n/* harmony import */ var _internationalized_date__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @internationalized/date */ \"(ssr)/../node_modules/.pnpm/@internationalized+date@3.5.6/node_modules/@internationalized/date/dist/conversion.mjs\");\n/* harmony import */ var _internationalized_date__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @internationalized/date */ \"(ssr)/../node_modules/.pnpm/@internationalized+date@3.5.6/node_modules/@internationalized/date/dist/queries.mjs\");\n/* harmony import */ var _internationalized_date__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @internationalized/date */ \"(ssr)/../node_modules/.pnpm/@internationalized+date@3.5.6/node_modules/@internationalized/date/dist/GregorianCalendar.mjs\");\n/* harmony import */ var _react_stately_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-stately/utils */ \"(ssr)/../node_modules/.pnpm/@react-stately+utils@3.10.1_react@18.3.1/node_modules/@react-stately/utils/dist/useControlledState.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/../node_modules/.pnpm/next@14.0.3_@babel+core@7.25.7_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ function $131cf43a05231e1e$export$6d095e787d2b5e1f(props) {\n    let defaultFormatter = (0, react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>new (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_1__.DateFormatter)(props.locale), [\n        props.locale\n    ]);\n    let resolvedOptions = (0, react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>defaultFormatter.resolvedOptions(), [\n        defaultFormatter\n    ]);\n    let { locale: locale, createCalendar: createCalendar, visibleDuration: visibleDuration = {\n        months: 1\n    }, minValue: minValue, maxValue: maxValue, selectionAlignment: selectionAlignment, isDateUnavailable: isDateUnavailable, pageBehavior: pageBehavior = \"visible\" } = props;\n    let calendar = (0, react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>createCalendar(resolvedOptions.calendar), [\n        createCalendar,\n        resolvedOptions.calendar\n    ]);\n    let [value, setControlledValue] = (0, _react_stately_utils__WEBPACK_IMPORTED_MODULE_2__.useControlledState)(props.value, props.defaultValue, props.onChange);\n    let calendarDateValue = (0, react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>value ? (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_3__.toCalendar)((0, _internationalized_date__WEBPACK_IMPORTED_MODULE_3__.toCalendarDate)(value), calendar) : null, [\n        value,\n        calendar\n    ]);\n    let timeZone = (0, react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>value && \"timeZone\" in value ? value.timeZone : resolvedOptions.timeZone, [\n        value,\n        resolvedOptions.timeZone\n    ]);\n    let focusedCalendarDate = (0, react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>props.focusedValue ? (0, _utils_mjs__WEBPACK_IMPORTED_MODULE_4__.constrainValue)((0, _internationalized_date__WEBPACK_IMPORTED_MODULE_3__.toCalendar)((0, _internationalized_date__WEBPACK_IMPORTED_MODULE_3__.toCalendarDate)(props.focusedValue), calendar), minValue, maxValue) : undefined, [\n        props.focusedValue,\n        calendar,\n        minValue,\n        maxValue\n    ]);\n    let defaultFocusedCalendarDate = (0, react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>(0, _utils_mjs__WEBPACK_IMPORTED_MODULE_4__.constrainValue)(props.defaultFocusedValue ? (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_3__.toCalendar)((0, _internationalized_date__WEBPACK_IMPORTED_MODULE_3__.toCalendarDate)(props.defaultFocusedValue), calendar) : calendarDateValue || (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_3__.toCalendar)((0, _internationalized_date__WEBPACK_IMPORTED_MODULE_5__.today)(timeZone), calendar), minValue, maxValue), [\n        props.defaultFocusedValue,\n        calendarDateValue,\n        timeZone,\n        calendar,\n        minValue,\n        maxValue\n    ]);\n    let [focusedDate, setFocusedDate] = (0, _react_stately_utils__WEBPACK_IMPORTED_MODULE_2__.useControlledState)(focusedCalendarDate, defaultFocusedCalendarDate, props.onFocusChange);\n    let [startDate, setStartDate] = (0, react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>{\n        switch(selectionAlignment){\n            case \"start\":\n                return (0, _utils_mjs__WEBPACK_IMPORTED_MODULE_4__.alignStart)(focusedDate, visibleDuration, locale, minValue, maxValue);\n            case \"end\":\n                return (0, _utils_mjs__WEBPACK_IMPORTED_MODULE_4__.alignEnd)(focusedDate, visibleDuration, locale, minValue, maxValue);\n            case \"center\":\n            default:\n                return (0, _utils_mjs__WEBPACK_IMPORTED_MODULE_4__.alignCenter)(focusedDate, visibleDuration, locale, minValue, maxValue);\n        }\n    });\n    let [isFocused, setFocused] = (0, react__WEBPACK_IMPORTED_MODULE_0__.useState)(props.autoFocus || false);\n    let endDate = (0, react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        let duration = {\n            ...visibleDuration\n        };\n        if (duration.days) duration.days--;\n        else duration.days = -1;\n        return startDate.add(duration);\n    }, [\n        startDate,\n        visibleDuration\n    ]);\n    // Reset focused date and visible range when calendar changes.\n    let [lastCalendarIdentifier, setLastCalendarIdentifier] = (0, react__WEBPACK_IMPORTED_MODULE_0__.useState)(calendar.identifier);\n    if (calendar.identifier !== lastCalendarIdentifier) {\n        let newFocusedDate = (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_3__.toCalendar)(focusedDate, calendar);\n        setStartDate((0, _utils_mjs__WEBPACK_IMPORTED_MODULE_4__.alignCenter)(newFocusedDate, visibleDuration, locale, minValue, maxValue));\n        setFocusedDate(newFocusedDate);\n        setLastCalendarIdentifier(calendar.identifier);\n    }\n    if ((0, _utils_mjs__WEBPACK_IMPORTED_MODULE_4__.isInvalid)(focusedDate, minValue, maxValue)) setFocusedDate((0, _utils_mjs__WEBPACK_IMPORTED_MODULE_4__.constrainValue)(focusedDate, minValue, maxValue));\n    else if (focusedDate.compare(startDate) < 0) setStartDate((0, _utils_mjs__WEBPACK_IMPORTED_MODULE_4__.alignEnd)(focusedDate, visibleDuration, locale, minValue, maxValue));\n    else if (focusedDate.compare(endDate) > 0) setStartDate((0, _utils_mjs__WEBPACK_IMPORTED_MODULE_4__.alignStart)(focusedDate, visibleDuration, locale, minValue, maxValue));\n    // Sets focus to a specific cell date\n    function focusCell(date) {\n        date = (0, _utils_mjs__WEBPACK_IMPORTED_MODULE_4__.constrainValue)(date, minValue, maxValue);\n        setFocusedDate(date);\n    }\n    function setValue(newValue) {\n        if (!props.isDisabled && !props.isReadOnly) {\n            if (newValue === null) {\n                setControlledValue(null);\n                return;\n            }\n            newValue = (0, _utils_mjs__WEBPACK_IMPORTED_MODULE_4__.constrainValue)(newValue, minValue, maxValue);\n            newValue = (0, _utils_mjs__WEBPACK_IMPORTED_MODULE_4__.previousAvailableDate)(newValue, startDate, isDateUnavailable);\n            if (!newValue) return;\n            // The display calendar should not have any effect on the emitted value.\n            // Emit dates in the same calendar as the original value, if any, otherwise gregorian.\n            newValue = (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_3__.toCalendar)(newValue, (value === null || value === void 0 ? void 0 : value.calendar) || new (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_6__.GregorianCalendar)());\n            // Preserve time if the input value had one.\n            if (value && \"hour\" in value) setControlledValue(value.set(newValue));\n            else setControlledValue(newValue);\n        }\n    }\n    let isUnavailable = (0, react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        if (!calendarDateValue) return false;\n        if (isDateUnavailable && isDateUnavailable(calendarDateValue)) return true;\n        return (0, _utils_mjs__WEBPACK_IMPORTED_MODULE_4__.isInvalid)(calendarDateValue, minValue, maxValue);\n    }, [\n        calendarDateValue,\n        isDateUnavailable,\n        minValue,\n        maxValue\n    ]);\n    let isValueInvalid = props.isInvalid || props.validationState === \"invalid\" || isUnavailable;\n    let validationState = isValueInvalid ? \"invalid\" : null;\n    let pageDuration = (0, react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        if (pageBehavior === \"visible\") return visibleDuration;\n        return $131cf43a05231e1e$var$unitDuration(visibleDuration);\n    }, [\n        pageBehavior,\n        visibleDuration\n    ]);\n    return {\n        isDisabled: props.isDisabled,\n        isReadOnly: props.isReadOnly,\n        value: calendarDateValue,\n        setValue: setValue,\n        visibleRange: {\n            start: startDate,\n            end: endDate\n        },\n        minValue: minValue,\n        maxValue: maxValue,\n        focusedDate: focusedDate,\n        timeZone: timeZone,\n        validationState: validationState,\n        isValueInvalid: isValueInvalid,\n        setFocusedDate (date) {\n            focusCell(date);\n            setFocused(true);\n        },\n        focusNextDay () {\n            focusCell(focusedDate.add({\n                days: 1\n            }));\n        },\n        focusPreviousDay () {\n            focusCell(focusedDate.subtract({\n                days: 1\n            }));\n        },\n        focusNextRow () {\n            if (visibleDuration.days) this.focusNextPage();\n            else if (visibleDuration.weeks || visibleDuration.months || visibleDuration.years) focusCell(focusedDate.add({\n                weeks: 1\n            }));\n        },\n        focusPreviousRow () {\n            if (visibleDuration.days) this.focusPreviousPage();\n            else if (visibleDuration.weeks || visibleDuration.months || visibleDuration.years) focusCell(focusedDate.subtract({\n                weeks: 1\n            }));\n        },\n        focusNextPage () {\n            let start = startDate.add(pageDuration);\n            setFocusedDate((0, _utils_mjs__WEBPACK_IMPORTED_MODULE_4__.constrainValue)(focusedDate.add(pageDuration), minValue, maxValue));\n            setStartDate((0, _utils_mjs__WEBPACK_IMPORTED_MODULE_4__.alignStart)((0, _utils_mjs__WEBPACK_IMPORTED_MODULE_4__.constrainStart)(focusedDate, start, pageDuration, locale, minValue, maxValue), pageDuration, locale));\n        },\n        focusPreviousPage () {\n            let start = startDate.subtract(pageDuration);\n            setFocusedDate((0, _utils_mjs__WEBPACK_IMPORTED_MODULE_4__.constrainValue)(focusedDate.subtract(pageDuration), minValue, maxValue));\n            setStartDate((0, _utils_mjs__WEBPACK_IMPORTED_MODULE_4__.alignStart)((0, _utils_mjs__WEBPACK_IMPORTED_MODULE_4__.constrainStart)(focusedDate, start, pageDuration, locale, minValue, maxValue), pageDuration, locale));\n        },\n        focusSectionStart () {\n            if (visibleDuration.days) focusCell(startDate);\n            else if (visibleDuration.weeks) focusCell((0, _internationalized_date__WEBPACK_IMPORTED_MODULE_5__.startOfWeek)(focusedDate, locale));\n            else if (visibleDuration.months || visibleDuration.years) focusCell((0, _internationalized_date__WEBPACK_IMPORTED_MODULE_5__.startOfMonth)(focusedDate));\n        },\n        focusSectionEnd () {\n            if (visibleDuration.days) focusCell(endDate);\n            else if (visibleDuration.weeks) focusCell((0, _internationalized_date__WEBPACK_IMPORTED_MODULE_5__.endOfWeek)(focusedDate, locale));\n            else if (visibleDuration.months || visibleDuration.years) focusCell((0, _internationalized_date__WEBPACK_IMPORTED_MODULE_5__.endOfMonth)(focusedDate));\n        },\n        focusNextSection (larger) {\n            if (!larger && !visibleDuration.days) {\n                focusCell(focusedDate.add($131cf43a05231e1e$var$unitDuration(visibleDuration)));\n                return;\n            }\n            if (visibleDuration.days) this.focusNextPage();\n            else if (visibleDuration.weeks) focusCell(focusedDate.add({\n                months: 1\n            }));\n            else if (visibleDuration.months || visibleDuration.years) focusCell(focusedDate.add({\n                years: 1\n            }));\n        },\n        focusPreviousSection (larger) {\n            if (!larger && !visibleDuration.days) {\n                focusCell(focusedDate.subtract($131cf43a05231e1e$var$unitDuration(visibleDuration)));\n                return;\n            }\n            if (visibleDuration.days) this.focusPreviousPage();\n            else if (visibleDuration.weeks) focusCell(focusedDate.subtract({\n                months: 1\n            }));\n            else if (visibleDuration.months || visibleDuration.years) focusCell(focusedDate.subtract({\n                years: 1\n            }));\n        },\n        selectFocusedDate () {\n            setValue(focusedDate);\n        },\n        selectDate (date) {\n            setValue(date);\n        },\n        isFocused: isFocused,\n        setFocused: setFocused,\n        isInvalid (date) {\n            return (0, _utils_mjs__WEBPACK_IMPORTED_MODULE_4__.isInvalid)(date, minValue, maxValue);\n        },\n        isSelected (date) {\n            return calendarDateValue != null && (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_5__.isSameDay)(date, calendarDateValue) && !this.isCellDisabled(date) && !this.isCellUnavailable(date);\n        },\n        isCellFocused (date) {\n            return isFocused && focusedDate && (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_5__.isSameDay)(date, focusedDate);\n        },\n        isCellDisabled (date) {\n            return props.isDisabled || date.compare(startDate) < 0 || date.compare(endDate) > 0 || this.isInvalid(date, minValue, maxValue);\n        },\n        isCellUnavailable (date) {\n            return props.isDateUnavailable && props.isDateUnavailable(date);\n        },\n        isPreviousVisibleRangeInvalid () {\n            let prev = startDate.subtract({\n                days: 1\n            });\n            return (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_5__.isSameDay)(prev, startDate) || this.isInvalid(prev, minValue, maxValue);\n        },\n        isNextVisibleRangeInvalid () {\n            // Adding may return the same date if we reached the end of time\n            // according to the calendar system (e.g. 9999-12-31).\n            let next = endDate.add({\n                days: 1\n            });\n            return (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_5__.isSameDay)(next, endDate) || this.isInvalid(next, minValue, maxValue);\n        },\n        getDatesInWeek (weekIndex, from = startDate) {\n            // let date = startOfWeek(from, locale);\n            let date = from.add({\n                weeks: weekIndex\n            });\n            let dates = [];\n            date = (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_5__.startOfWeek)(date, locale);\n            // startOfWeek will clamp dates within the calendar system's valid range, which may\n            // start in the middle of a week. In this case, add null placeholders.\n            let dayOfWeek = (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_5__.getDayOfWeek)(date, locale);\n            for(let i = 0; i < dayOfWeek; i++)dates.push(null);\n            while(dates.length < 7){\n                dates.push(date);\n                let nextDate = date.add({\n                    days: 1\n                });\n                if ((0, _internationalized_date__WEBPACK_IMPORTED_MODULE_5__.isSameDay)(date, nextDate)) break;\n                date = nextDate;\n            }\n            // Add null placeholders if at the end of the calendar system.\n            while(dates.length < 7)dates.push(null);\n            return dates;\n        }\n    };\n}\nfunction $131cf43a05231e1e$var$unitDuration(duration) {\n    let unit = {\n        ...duration\n    };\n    for(let key in duration)unit[key] = 1;\n    return unit;\n}\n //# sourceMappingURL=useCalendarState.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/.pnpm/@react-stately+calendar@3.5.1_react@18.3.1/node_modules/@react-stately/calendar/dist/useCalendarState.mjs\n");

/***/ }),

/***/ "(ssr)/../node_modules/.pnpm/@react-stately+calendar@3.5.1_react@18.3.1/node_modules/@react-stately/calendar/dist/useRangeCalendarState.mjs":
/*!********************************************************************************************************************************************!*\
  !*** ../node_modules/.pnpm/@react-stately+calendar@3.5.1_react@18.3.1/node_modules/@react-stately/calendar/dist/useRangeCalendarState.mjs ***!
  \********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useRangeCalendarState: () => (/* binding */ $9a36b6ba2fb1a7c5$export$9a987164d97ecc90)\n/* harmony export */ });\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.mjs */ \"(ssr)/../node_modules/.pnpm/@react-stately+calendar@3.5.1_react@18.3.1/node_modules/@react-stately/calendar/dist/utils.mjs\");\n/* harmony import */ var _useCalendarState_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./useCalendarState.mjs */ \"(ssr)/../node_modules/.pnpm/@react-stately+calendar@3.5.1_react@18.3.1/node_modules/@react-stately/calendar/dist/useCalendarState.mjs\");\n/* harmony import */ var _internationalized_date__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @internationalized/date */ \"(ssr)/../node_modules/.pnpm/@internationalized+date@3.5.6/node_modules/@internationalized/date/dist/conversion.mjs\");\n/* harmony import */ var _internationalized_date__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @internationalized/date */ \"(ssr)/../node_modules/.pnpm/@internationalized+date@3.5.6/node_modules/@internationalized/date/dist/queries.mjs\");\n/* harmony import */ var _internationalized_date__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @internationalized/date */ \"(ssr)/../node_modules/.pnpm/@internationalized+date@3.5.6/node_modules/@internationalized/date/dist/GregorianCalendar.mjs\");\n/* harmony import */ var _react_stately_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @react-stately/utils */ \"(ssr)/../node_modules/.pnpm/@react-stately+utils@3.10.1_react@18.3.1/node_modules/@react-stately/utils/dist/useControlledState.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/../node_modules/.pnpm/next@14.0.3_@babel+core@7.25.7_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\n\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ function $9a36b6ba2fb1a7c5$export$9a987164d97ecc90(props) {\n    let { value: valueProp, defaultValue: defaultValue, onChange: onChange, createCalendar: createCalendar, locale: locale, visibleDuration: visibleDuration = {\n        months: 1\n    }, minValue: minValue, maxValue: maxValue, ...calendarProps } = props;\n    let [value, setValue] = (0, _react_stately_utils__WEBPACK_IMPORTED_MODULE_1__.useControlledState)(valueProp, defaultValue || null, onChange);\n    let [anchorDate, setAnchorDateState] = (0, react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    let alignment = \"center\";\n    if (value && value.start && value.end) {\n        let start = (0, _utils_mjs__WEBPACK_IMPORTED_MODULE_2__.alignCenter)((0, _internationalized_date__WEBPACK_IMPORTED_MODULE_3__.toCalendarDate)(value.start), visibleDuration, locale, minValue, maxValue);\n        let end = start.add(visibleDuration).subtract({\n            days: 1\n        });\n        if (value.end.compare(end) > 0) alignment = \"start\";\n    }\n    // Available range must be stored in a ref so we have access to the updated version immediately in `isInvalid`.\n    let availableRangeRef = (0, react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    let [availableRange, setAvailableRange] = (0, react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    let min = (0, react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>(0, _internationalized_date__WEBPACK_IMPORTED_MODULE_4__.maxDate)(minValue, availableRange === null || availableRange === void 0 ? void 0 : availableRange.start), [\n        minValue,\n        availableRange\n    ]);\n    let max = (0, react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>(0, _internationalized_date__WEBPACK_IMPORTED_MODULE_4__.minDate)(maxValue, availableRange === null || availableRange === void 0 ? void 0 : availableRange.end), [\n        maxValue,\n        availableRange\n    ]);\n    let calendar = (0, _useCalendarState_mjs__WEBPACK_IMPORTED_MODULE_5__.useCalendarState)({\n        ...calendarProps,\n        value: value && value.start,\n        createCalendar: createCalendar,\n        locale: locale,\n        visibleDuration: visibleDuration,\n        minValue: min,\n        maxValue: max,\n        selectionAlignment: alignment\n    });\n    let updateAvailableRange = (date)=>{\n        if (date && props.isDateUnavailable && !props.allowsNonContiguousRanges) {\n            availableRangeRef.current = {\n                start: $9a36b6ba2fb1a7c5$var$nextUnavailableDate(date, calendar, -1),\n                end: $9a36b6ba2fb1a7c5$var$nextUnavailableDate(date, calendar, 1)\n            };\n            setAvailableRange(availableRangeRef.current);\n        } else {\n            availableRangeRef.current = null;\n            setAvailableRange(null);\n        }\n    };\n    // If the visible range changes, we need to update the available range.\n    let [lastVisibleRange, setLastVisibleRange] = (0, react__WEBPACK_IMPORTED_MODULE_0__.useState)(calendar.visibleRange);\n    if (!(0, _internationalized_date__WEBPACK_IMPORTED_MODULE_4__.isEqualDay)(calendar.visibleRange.start, lastVisibleRange.start) || !(0, _internationalized_date__WEBPACK_IMPORTED_MODULE_4__.isEqualDay)(calendar.visibleRange.end, lastVisibleRange.end)) {\n        updateAvailableRange(anchorDate);\n        setLastVisibleRange(calendar.visibleRange);\n    }\n    let setAnchorDate = (date)=>{\n        if (date) {\n            setAnchorDateState(date);\n            updateAvailableRange(date);\n        } else {\n            setAnchorDateState(null);\n            updateAvailableRange(null);\n        }\n    };\n    let highlightedRange = anchorDate ? $9a36b6ba2fb1a7c5$var$makeRange(anchorDate, calendar.focusedDate) : value && $9a36b6ba2fb1a7c5$var$makeRange(value.start, value.end);\n    let selectDate = (date)=>{\n        if (props.isReadOnly) return;\n        date = (0, _utils_mjs__WEBPACK_IMPORTED_MODULE_2__.constrainValue)(date, min, max);\n        date = (0, _utils_mjs__WEBPACK_IMPORTED_MODULE_2__.previousAvailableDate)(date, calendar.visibleRange.start, props.isDateUnavailable);\n        if (!date) return;\n        if (!anchorDate) setAnchorDate(date);\n        else {\n            let range = $9a36b6ba2fb1a7c5$var$makeRange(anchorDate, date);\n            setValue({\n                start: $9a36b6ba2fb1a7c5$var$convertValue(range.start, value === null || value === void 0 ? void 0 : value.start),\n                end: $9a36b6ba2fb1a7c5$var$convertValue(range.end, value === null || value === void 0 ? void 0 : value.end)\n            });\n            setAnchorDate(null);\n        }\n    };\n    let [isDragging, setDragging] = (0, react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    let { isDateUnavailable: isDateUnavailable } = props;\n    let isInvalidSelection = (0, react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        if (!value || anchorDate) return false;\n        if (isDateUnavailable && (isDateUnavailable(value.start) || isDateUnavailable(value.end))) return true;\n        return (0, _utils_mjs__WEBPACK_IMPORTED_MODULE_2__.isInvalid)(value.start, minValue, maxValue) || (0, _utils_mjs__WEBPACK_IMPORTED_MODULE_2__.isInvalid)(value.end, minValue, maxValue);\n    }, [\n        isDateUnavailable,\n        value,\n        anchorDate,\n        minValue,\n        maxValue\n    ]);\n    let isValueInvalid = props.isInvalid || props.validationState === \"invalid\" || isInvalidSelection;\n    let validationState = isValueInvalid ? \"invalid\" : null;\n    return {\n        ...calendar,\n        value: value,\n        setValue: setValue,\n        anchorDate: anchorDate,\n        setAnchorDate: setAnchorDate,\n        highlightedRange: highlightedRange,\n        validationState: validationState,\n        isValueInvalid: isValueInvalid,\n        selectFocusedDate () {\n            selectDate(calendar.focusedDate);\n        },\n        selectDate: selectDate,\n        highlightDate (date) {\n            if (anchorDate) calendar.setFocusedDate(date);\n        },\n        isSelected (date) {\n            return highlightedRange && date.compare(highlightedRange.start) >= 0 && date.compare(highlightedRange.end) <= 0 && !calendar.isCellDisabled(date) && !calendar.isCellUnavailable(date);\n        },\n        isInvalid (date) {\n            var _availableRangeRef_current, _availableRangeRef_current1;\n            return calendar.isInvalid(date) || (0, _utils_mjs__WEBPACK_IMPORTED_MODULE_2__.isInvalid)(date, (_availableRangeRef_current = availableRangeRef.current) === null || _availableRangeRef_current === void 0 ? void 0 : _availableRangeRef_current.start, (_availableRangeRef_current1 = availableRangeRef.current) === null || _availableRangeRef_current1 === void 0 ? void 0 : _availableRangeRef_current1.end);\n        },\n        isDragging: isDragging,\n        setDragging: setDragging\n    };\n}\nfunction $9a36b6ba2fb1a7c5$var$makeRange(start, end) {\n    if (!start || !end) return null;\n    if (end.compare(start) < 0) [start, end] = [\n        end,\n        start\n    ];\n    return {\n        start: (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_3__.toCalendarDate)(start),\n        end: (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_3__.toCalendarDate)(end)\n    };\n}\nfunction $9a36b6ba2fb1a7c5$var$convertValue(newValue, oldValue) {\n    // The display calendar should not have any effect on the emitted value.\n    // Emit dates in the same calendar as the original value, if any, otherwise gregorian.\n    newValue = (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_3__.toCalendar)(newValue, (oldValue === null || oldValue === void 0 ? void 0 : oldValue.calendar) || new (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_6__.GregorianCalendar)());\n    // Preserve time if the input value had one.\n    if (oldValue && \"hour\" in oldValue) return oldValue.set(newValue);\n    return newValue;\n}\nfunction $9a36b6ba2fb1a7c5$var$nextUnavailableDate(anchorDate, state, dir) {\n    let nextDate = anchorDate.add({\n        days: dir\n    });\n    while((dir < 0 ? nextDate.compare(state.visibleRange.start) >= 0 : nextDate.compare(state.visibleRange.end) <= 0) && !state.isCellUnavailable(nextDate))nextDate = nextDate.add({\n        days: dir\n    });\n    if (state.isCellUnavailable(nextDate)) return nextDate.add({\n        days: -dir\n    });\n    return null;\n}\n //# sourceMappingURL=useRangeCalendarState.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/.pnpm/@react-stately+calendar@3.5.1_react@18.3.1/node_modules/@react-stately/calendar/dist/useRangeCalendarState.mjs\n");

/***/ }),

/***/ "(ssr)/../node_modules/.pnpm/@react-stately+calendar@3.5.1_react@18.3.1/node_modules/@react-stately/calendar/dist/utils.mjs":
/*!****************************************************************************************************************************!*\
  !*** ../node_modules/.pnpm/@react-stately+calendar@3.5.1_react@18.3.1/node_modules/@react-stately/calendar/dist/utils.mjs ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alignCenter: () => (/* binding */ $f62d864046160412$export$f4a51ff076cc9a09),\n/* harmony export */   alignEnd: () => (/* binding */ $f62d864046160412$export$530edbfc915b2b04),\n/* harmony export */   alignStart: () => (/* binding */ $f62d864046160412$export$144a00ba6044eb9),\n/* harmony export */   constrainStart: () => (/* binding */ $f62d864046160412$export$5bb865b12696a77d),\n/* harmony export */   constrainValue: () => (/* binding */ $f62d864046160412$export$4f5203c0d889109e),\n/* harmony export */   isInvalid: () => (/* binding */ $f62d864046160412$export$eac50920cf2fd59a),\n/* harmony export */   previousAvailableDate: () => (/* binding */ $f62d864046160412$export$a1d3911297b952d7)\n/* harmony export */ });\n/* harmony import */ var _internationalized_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @internationalized/date */ \"(ssr)/../node_modules/.pnpm/@internationalized+date@3.5.6/node_modules/@internationalized/date/dist/queries.mjs\");\n/* harmony import */ var _internationalized_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @internationalized/date */ \"(ssr)/../node_modules/.pnpm/@internationalized+date@3.5.6/node_modules/@internationalized/date/dist/conversion.mjs\");\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ function $f62d864046160412$export$eac50920cf2fd59a(date, minValue, maxValue) {\n    return minValue != null && date.compare(minValue) < 0 || maxValue != null && date.compare(maxValue) > 0;\n}\nfunction $f62d864046160412$export$f4a51ff076cc9a09(date, duration, locale, minValue, maxValue) {\n    let halfDuration = {};\n    for(let key in duration){\n        halfDuration[key] = Math.floor(duration[key] / 2);\n        if (halfDuration[key] > 0 && duration[key] % 2 === 0) halfDuration[key]--;\n    }\n    let aligned = $f62d864046160412$export$144a00ba6044eb9(date, duration, locale).subtract(halfDuration);\n    return $f62d864046160412$export$5bb865b12696a77d(date, aligned, duration, locale, minValue, maxValue);\n}\nfunction $f62d864046160412$export$144a00ba6044eb9(date, duration, locale, minValue, maxValue) {\n    // align to the start of the largest unit\n    let aligned = date;\n    if (duration.years) aligned = (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_0__.startOfYear)(date);\n    else if (duration.months) aligned = (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_0__.startOfMonth)(date);\n    else if (duration.weeks) aligned = (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_0__.startOfWeek)(date, locale);\n    return $f62d864046160412$export$5bb865b12696a77d(date, aligned, duration, locale, minValue, maxValue);\n}\nfunction $f62d864046160412$export$530edbfc915b2b04(date, duration, locale, minValue, maxValue) {\n    let d = {\n        ...duration\n    };\n    // subtract 1 from the smallest unit\n    if (duration.days) d.days--;\n    else if (duration.weeks) d.weeks--;\n    else if (duration.months) d.months--;\n    else if (duration.years) d.years--;\n    let aligned = $f62d864046160412$export$144a00ba6044eb9(date, duration, locale).subtract(d);\n    return $f62d864046160412$export$5bb865b12696a77d(date, aligned, duration, locale, minValue, maxValue);\n}\nfunction $f62d864046160412$export$5bb865b12696a77d(date, aligned, duration, locale, minValue, maxValue) {\n    if (minValue && date.compare(minValue) >= 0) aligned = (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_0__.maxDate)(aligned, $f62d864046160412$export$144a00ba6044eb9((0, _internationalized_date__WEBPACK_IMPORTED_MODULE_1__.toCalendarDate)(minValue), duration, locale));\n    if (maxValue && date.compare(maxValue) <= 0) aligned = (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_0__.minDate)(aligned, $f62d864046160412$export$530edbfc915b2b04((0, _internationalized_date__WEBPACK_IMPORTED_MODULE_1__.toCalendarDate)(maxValue), duration, locale));\n    return aligned;\n}\nfunction $f62d864046160412$export$4f5203c0d889109e(date, minValue, maxValue) {\n    if (minValue) date = (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_0__.maxDate)(date, (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_1__.toCalendarDate)(minValue));\n    if (maxValue) date = (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_0__.minDate)(date, (0, _internationalized_date__WEBPACK_IMPORTED_MODULE_1__.toCalendarDate)(maxValue));\n    return date;\n}\nfunction $f62d864046160412$export$a1d3911297b952d7(date, minValue, isDateUnavailable) {\n    if (!isDateUnavailable) return date;\n    while(date.compare(minValue) >= 0 && isDateUnavailable(date))date = date.subtract({\n        days: 1\n    });\n    if (date.compare(minValue) >= 0) return date;\n}\n //# sourceMappingURL=utils.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/.pnpm/@react-stately+calendar@3.5.1_react@18.3.1/node_modules/@react-stately/calendar/dist/utils.mjs\n");

/***/ })

};
;